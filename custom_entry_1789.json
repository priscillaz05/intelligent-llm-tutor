"```json\n{\n  \"Coding Problem\": \"Amer cabs has released a scheme through which a user gets a free drive when he shares a reference code with another Amer app user. Given N number of app users, output total number of free drives gained by all of them. Two same users cannot share reference code more than once.  \\n\\nInput Format \\nThe first line contains the number of test cases T, T lines follow. \\nEach line then contains an integer N, the total number of Amer App Users.\\n\\nOutput Format\\n\\nPrint the number of Free Drives for each test-case in a new line.\\n\\nConstraints\\n\\n1 \u2264 T \u2264 1000\\n0 < N < 10^6\\n\\nSAMPLE INPUT\\n2\\n1\\n2\\n\\nSAMPLE OUTPUT\\n0\\n1\\n\\nExplanation\\n\\nCase 1 : Single user shares no reference code, hence 0 free drives. \\nCase 2 : There are 2 app users, so reference code is shared once, hence 1 free drive.\",\n  \"Ground Truth Solution\": \"t = int(input())\\n\\nwhile t > 0:\\n\\tt = t-1\\n\\tn = int(input())\\n\\t\\n\\tans = n*(n-1)/2\\n\\t\\n\\tprint(ans)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem states that given N users, we need to calculate the total number of free drives gained. Each pair of users can share a reference code only once, and this gives them a free ride.\\n- Identifying the Core Logic: The number of free rides corresponds to the number of unique pairs that can be formed among N users. This is a combination problem, specifically \\\"N choose 2\\\".\\n- Deriving the Formula: The number of ways to choose 2 users out of N is given by the formula N * (N - 1) / 2.\\n- Considering Constraints: The input N is constrained to be between 0 and 10^6, and the number of test cases T is between 1 and 1000. This means the calculation should be efficient to avoid exceeding the time limit.\\n- Implementing the Solution: Read the input T, and for each test case, read the value of N, calculate N * (N - 1) / 2, and print the result.\",\n  \"LLM Questions\": [\n    \"How is the number of free drives related to the number of users, and what mathematical concept does it correspond to?\",\n    \"Given N users, what is the formula to calculate the total number of unique pairs that can be formed?\",\n    \"What constraints are given for the input values, and how might these constraints affect the implementation of the solution?\",\n    \"What is the result when there is only one user? Does this align with the problem description?\",\n    \"Is it necessary to consider the order in which the users share reference codes, or only that they share at least once?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The number of free drives corresponds to the number of unique pairs of users that can share reference codes, which is a combination problem.\",\n    \"The formula to calculate the number of unique pairs is N * (N - 1) / 2.\",\n    \"N is between 0 and 10^6, and T is between 1 and 1000. The algorithm must be efficient to handle potentially large values of N without causing timeout errors.\",\n    \"When there is only one user (N=1), no reference codes can be shared. Thus, the number of free drives is 0, which aligns with the description.\",\n    \"The problem states that two same users cannot share reference code more than once. So we can consider each pair of users share refrence code only once. It is not necessary to consider the order of them.\"\n  ]\n}\n```"