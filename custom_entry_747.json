"```json\n{\n  \"Coding Problem\": \"There are N mountains ranging from east to west, and an ocean to the west.\\nAt the top of each mountain, there is an inn. You have decided to choose where to stay from these inns.\\nThe height of the i-th mountain from the west is H_i.\\nYou can certainly see the ocean from the inn at the top of the westmost mountain.\\nFor the inn at the top of the i-th mountain from the west (i = 2, 3, ..., N), you can see the ocean if and only if H_1 \\\\leq H_i, H_2 \\\\leq H_i, ..., and H_{i-1} \\\\leq H_i.\\nFrom how many of these N inns can you see the ocean?\\n\\n-----Constraints-----\\n - All values in input are integers.\\n - 1 \\\\leq N \\\\leq 20\\n - 1 \\\\leq H_i \\\\leq 100\\n\\n-----Input-----\\nInput is given from Standard Input in the following format:\\nN\\nH_1 H_2 ... H_N\\n\\n-----Output-----\\nPrint the number of inns from which you can see the ocean.\\n\\n-----Sample Input-----\\n4\\n6 5 6 8\\n\\n-----Sample Output-----\\n3\\n\\nYou can see the ocean from the first, third and fourth inns from the west.\",\n  \"Ground Truth Solution\": \"n = int(input())\\nh = list(map(int, input().split()))\\nkei = 1\\nm = h[0]\\nfor i in range(1, n):\\n\\tif m <= h[i]:\\n\\t\\tm = h[i]\\n\\t\\tkei += 1\\nprint(kei)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires counting the number of inns from which you can see the ocean. An inn can see the ocean if its mountain height is greater than or equal to the heights of all mountains to its west.\\n- Identifying Key Conditions: The first inn always has a view. For subsequent inns, the height must be greater than or equal to all previous heights.\\n- Algorithmic Strategy: Iterate through the mountain heights. Keep track of the maximum height seen so far. If the current mountain's height is greater than or equal to the maximum height, increment the count and update the maximum height.\",\n  \"LLM Questions\": [\n    \"What is the base case, and how does it influence the initial count?\",\n    \"How do you determine if an inn has a view based on the heights of the mountains to its west?\",\n    \"How do you keep track of the maximum height seen so far as you iterate through the mountains?\",\n    \"What data structures or variables would you use to store the number of inns with a view and the maximum height encountered?\",\n    \"What should the algorithm output based on the input and conditions?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The first inn always has a view of the ocean, so the initial count should be 1.\",\n    \"An inn has a view if its mountain height is greater than or equal to all mountain heights to its west. This means it must be greater than or equal to the maximum height seen so far.\",\n    \"Use a variable to store the maximum height encountered. As you iterate through the heights, update this variable if the current height is greater than the current maximum.\",\n    \"Use an integer variable to store the count of inns with a view, initialized to 1. Use another integer variable to store the maximum height encountered so far, initialized to the height of the first mountain.\",\n    \"The algorithm should output the final count of inns from which you can see the ocean.\"\n  ]\n}\n```"