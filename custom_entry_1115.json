"```json\n{\n  \"Coding Problem\": \"And again a misfortune fell on Poor Student. He is being late for an exam.\\n\\nHaving rushed to a bus stop that is in point (0, 0), he got on a minibus and they drove along a straight line, parallel to axis OX, in the direction of increasing x.\\n\\nPoor Student knows the following: \\n\\n  * during one run the minibus makes n stops, the i-th stop is in point (xi, 0)\\n  * coordinates of all the stops are different \\n  * the minibus drives at a constant speed, equal to vb\\n  * it can be assumed the passengers get on and off the minibus at a bus stop momentarily \\n  * Student can get off the minibus only at a bus stop \\n  * Student will have to get off the minibus at a terminal stop, if he does not get off earlier \\n  * the University, where the exam will be held, is in point (xu, yu)\\n  * Student can run from a bus stop to the University at a constant speed vs as long as needed \\n  * a distance between two points can be calculated according to the following formula: <image>\\n  * Student is already on the minibus, so, he cannot get off at the first bus stop \\n\\n\\n\\nPoor Student wants to get to the University as soon as possible. Help him to choose the bus stop, where he should get off. If such bus stops are multiple, choose the bus stop closest to the University.\\n\\nInput\\n\\nThe first line contains three integer numbers: 2 \u2264 n \u2264 100, 1 \u2264 vb, vs \u2264 1000. The second line contains n non-negative integers in ascending order: coordinates xi of the bus stop with index i. It is guaranteed that x1 equals to zero, and xn \u2264 105. The third line contains the coordinates of the University, integers xu and yu, not exceeding 105 in absolute value. \\n\\nOutput\\n\\nIn the only line output the answer to the problem \u2014 index of the optimum bus stop.\\n\\nExamples\\n\\nInput\\n\\n4 5 2\\n0 2 4 6\\n4 1\\n\\n\\nOutput\\n\\n3\\n\\nInput\\n\\n2 1 1\\n0 100000\\n100000 100000\\n\\n\\nOutput\\n\\n2\\n\\nNote\\n\\nAs you know, students are a special sort of people, and minibuses usually do not hurry. That's why you should not be surprised, if Student's speed is higher than the speed of the minibus.\",\n  \"Ground Truth Solution\": \"TN = 1\\n\\ndef solution():\\n\\timport math\\n\\t(n, v_b, v_s) = map(int, input().split())\\n\\tx = list(map(int, input().split()))\\n\\t(x_u, y_u) = map(int, input().split())\\n\\ta_s = 111111111000000000000000000000000\\n\\tans = 0\\n\\tfor i in range(1, n):\\n\\t\\tif x[i] / v_b + math.sqrt((x_u - x[i]) ** 2 + y_u ** 2) / v_s <= a_s:\\n\\t\\t\\ta_s = x[i] / v_b + math.sqrt((x_u - x[i]) ** 2 + y_u ** 2) / v_s\\n\\t\\t\\tans = i + 1\\n\\tprint(ans)\\nwhile TN != 0:\\n\\tsolution()\\n\\tTN -= 1\",\n  \"LLM CoT Steps Breakdown\": \"- Read Input and problem constraints: Understand that the input consists of the number of stops, minibus speed, student speed, stop coordinates, and university coordinates. Recognize the need to find the optimal bus stop to minimize travel time.\\n- Calculate travel time from each stop to the university: Calculate the total time taken to reach the university from each bus stop by adding the time spent on the minibus to the time spent running to the university. The time spent on the minibus is simply the stop coordinate divided by the minibus speed. The time spent running is the Euclidean distance between the bus stop and the university divided by the student's speed.\\n- Compare total travel times and select the best bus stop: Iterate through all bus stops (excluding the first since the student is already on the bus) and compare the total travel time calculated. Keep track of the minimum travel time and the corresponding bus stop index. If multiple stops result in the same minimum time, select the one closest to the university (implicitly handled by iterating through the stops in order of increasing index).\",\n  \"LLM Questions\": [\n    \"What is the formula to calculate the Euclidean distance between two points (x1, y1) and (x2, y2)?\",\n    \"Expected Answer: The Euclidean distance is calculated as the square root of ((x2 - x1)^2 + (y2 - y1)^2).\",\n    \"How do you calculate the total travel time for each stop, considering both minibus and running times?\",\n    \"Expected Answer: Calculate the time spent on the minibus by dividing the stop's x-coordinate by the minibus speed. Then, calculate the time spent running by dividing the distance between the stop and the university by the student's speed. Add these two times to get the total travel time.\",\n    \"How do you choose the optimal bus stop when multiple stops have the same minimum travel time?\",\n    \"Expected Answer: Select the bus stop closest to the University. The problem description states 'If such bus stops are multiple, choose the bus stop closest to the University.'\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The Euclidean distance is calculated as the square root of ((x2 - x1)^2 + (y2 - y1)^2).\",\n    \"Calculate the time spent on the minibus by dividing the stop's x-coordinate by the minibus speed. Then, calculate the time spent running by dividing the distance between the stop and the university by the student's speed. Add these two times to get the total travel time.\",\n    \"Select the bus stop closest to the University. The problem description states 'If such bus stops are multiple, choose the bus stop closest to the University.'\"\n  ]\n}\n```"