"```json\n{\n  \"Coding Problem\": \"Description\\n\\nLets imagine a yoga classroom as a Square 2D Array of Integers ```classroom```, with each integer representing a person, and the value representing their skill level.\\n\\n```\\nclassroom = [\\n            [3,2,1,3],\\n            [1,3,2,1],\\n            [1,1,1,2],\\n            ]\\n            \\nposes = [1,7,5,9,10,21,4,3]\\n```\\n\\nDuring a yoga class the instructor gives a list of integers ```poses``` representing a yoga pose that each person in the class will attempt to complete.\\n\\nA person can complete a yoga pose if the sum of their row and their skill level is greater than or equal to the value of the pose.\\n\\n Task\\n\\nYour task is to return the total amount poses completed for the entire ```classroom```.\\n\\nExample\\n\\n```\\nclassroom = [\\n            [1,1,0,1], #sum = 3\\n            [2,0,6,0], #sum = 8\\n            [0,2,2,0], #sum = 4\\n            ]\\n                    \\nposes = [4, 0, 20, 10]\\n\\n3 people in row 1 can complete the first pose\\nEverybody in row 1 can complete the second pose\\nNobody in row 1 can complete the third pose\\nNobody in row 1 can complete the fourth pose\\n\\nThe total poses completed for row 1 is 7\\n\\nYou'll need to return the total for all rows and all poses.\\n```\\n\\nTranslations are welcomed!\",\n  \"Ground Truth Solution\": \"def yoga(classroom, poses):\\n\\ttotal_poses = 0\\n\\tfor pose in poses:\\n\\t\\tfor row in classroom:\\n\\t\\t\\tfor person in row:\\n\\t\\t\\t\\tif person + sum(row) >= pose:\\n\\t\\t\\t\\t\\ttotal_poses += 1\\n\\treturn total_poses\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires calculating how many poses each person can complete, given their skill, the row's total skill, and the required skill (pose value).\\n- Iterating through the data: The solution needs to iterate through each pose, each row in the classroom, and each person in the row.\\n- Completing Poses: Determine how to check if a person can complete a pose by summing the row values, adding the person's value, and comparing against the pose value.\\n- Accumulating the count: Decide how to increment and return the `total_poses` variable.\",\n  \"LLM Questions\": [\n    \"What does the classroom array represent, and how does it relate to the individuals attempting yoga poses?\",\n    \"How do you determine whether a person can successfully complete a given yoga pose based on their skill level, their row's total skill level and the pose's difficulty?\",\n    \"Can you describe the process of iterating through the classroom and the poses to calculate the total number of successfully completed poses?\",\n    \"How would you handle edge cases, such as an empty classroom or an empty list of poses?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The classroom array represents the yoga classroom as a 2D array, where each element represents a person and their skill level in yoga.\",\n    \"A person can complete a pose if their skill level plus the sum of their row is greater than or equal to the difficulty of the pose.\",\n    \"I would iterate through each pose in the `poses` list, and for each pose, iterate through each row in the `classroom`. Then, iterate through each person in the row and check if the condition `person + sum(row) >= pose` is met. If so, increment the `total_poses` counter.\",\n    \"If the classroom is empty or the list of poses is empty, the total number of completed poses would be zero.\"\n  ]\n}\n```"