"```json\n{\n  \"Coding Problem\": \"Read problems statements in [Hindi], [Mandarin Chinese], [Vietnamese], and [Bengali] as well.\\n\\nThere are $K$ problems in a contest with $N$ participants. All the problems don't necessarily have the same points assigned to them - you are given an array $A$ of integers, where $A_{i}$ denotes the points assigned to the $i^{th}$ problem. If a participant solves the $i^{th}$ problem, they will get $A_{i}$ points added to their total score. Note that there are no partial points - they can get only $0$ or $A_{i}$ points on the $i^{th}$ problem. For each participant $i$, you are also given their final verdict in each problem in the form of a binary string $S_{i}$ - a $1$ denotes that they solved that problem, and a $0$ denotes that they did not. \\n\\nYour job is to find the total score of each participant.\\n\\n------ Input: ------\\n\\nThe first line of input contains a single integer $T$, denoting the number of testcases. Then the testcases follow. \\nFirst line of each testcase contains $2$ space separated integers, $N$ and $K$, denoting the number of participants and the number of problems in the contest respectively.\\nThe second line contains $K$ space separated integers - $A_{1}, A_{2}, \\\\ldots, A_{K}$, where $A_{i}$ denotes the points assigned to the $i^{th}$  problem.\\nThe $i^{th}$ of the next $N$ lines contains a binary string $S_{i}$ of length $K$, where $S_{ij}$ represents the verdict of the $j^{th}$ problem for $i^{th}$ participant. $S_{ij} = 1$ if they solved that problem, and $S_{ij} = 0$ otherwise.\\n\\n------ Output: ------\\nFor each testcase, output $N$ lines, with the $i^{th}$ line containing a single integer denoting the total score of the $i^{th}$ participant.\\n\\n------ Constraints  ------\\n$1 \\\\leq T \\\\leq 5$\\n$1 \\\\leq A_{i} \\\\leq 10^{5}$\\n$0 \\\\leq S_{ij} \\\\leq 1$\\nSum of $N * K$ over all tests is atmost $10^{6}$\\n$1 \\\\leq N, K$\\n\\n----- Sample Input 1 ------ \\n3\\n2 2\\n1 2\\n01\\n10\\n2 2\\n1 2\\n11\\n00\\n2 1\\n100\\n0\\n1\\n----- Sample Output 1 ------ \\n2\\n1\\n3\\n0\\n0\\n100\\n----- explanation 1 ------ \\nCase 1: The first participant's binary string is \\\"$01$\\\", which means that they did not solve the first problem, but they solved the second problem. And as the points assigned to the two problems are $1$ and $2$, the total score of the first participant is $2$. Hence the first output is $2$.\\n\\nSimilarly, the second participant's binary string is \\\"$10$\\\", which means that they solved the first problem, but did not solve the second problem. So their total score is $1$. Hence the second output is $1$.\\n\\nCase 2: The first participant's binary string is \\\"$11$\\\", which means that they solved both the first and second problems. And as the points assigned to the two problems are $1$ and $2$, the total score of the first participant is $1 + 2 = 3$. Hence the third output is $3$.\\n\\nSimilarly, the second participant's binary string is \\\"$00$\\\", which means that they did not solve any problem. So their total score is $0$. And hence the fourth output is $0$.\\n\\nCase 3: The first participant's binary string is \\\"$0$\\\", which means that they did not solve the only problem of the contest. Hence the total score of the first participant is $0$. Hence the fifth output is $0$.\\n\\nSimilarly, the second participant's binary string is \\\"$1$\\\", which means that they solved the only problem in the contest. And as the points assigned to that problem is $100$, the total score of the second participant is $100$. Hence the last output is $100$.\",\n  \"Ground Truth Solution\": \"for _ in range(int(input())):\\n\\t(n, k) = map(int, input().split())\\n\\tp = [int(i) for i in input().split()]\\n\\tfor i in range(n):\\n\\t\\ts = input()\\n\\t\\tans = 0\\n\\t\\tfor j in range(k):\\n\\t\\t\\tif s[j] == '1':\\n\\t\\t\\t\\tans += p[j]\\n\\t\\tprint(ans)\",\n  \"LLM CoT Steps Breakdown\": \"- Reading Input: The first line should be read to determine the number of test cases. Inside each test case, read N and K, representing the number of participants and problems respectively. Then read the points assigned to each of the K problems.\\n- Iterating Through Participants: Loop through each participant. For each participant, read their solution string Si. Initialize the total score to 0.\\n- Calculating Score: For each problem, check if the participant solved it (Si[j] == '1'). If so, add the corresponding points A[j] to the total score.\\n- Printing Output: After calculating the total score for each participant, print it on a new line.\\n- Handling Multiple Test Cases: Repeat the above steps for each test case.\",\n  \"LLM Questions\": [\n    \"How can I efficiently read and parse the input for each test case, including N, K, the problem points, and participant solutions?\",\n    \"What's the best way to iterate through the participants and, for each participant, calculate their score based on the problems they solved?\",\n    \"How can I ensure that the program handles multiple test cases correctly and produces the expected output for each case?\",\n    \"Are there any potential edge cases or constraints I should be aware of that could affect the correctness or efficiency of my solution?\",\n    \"How would you validate your code against the given constraints and sample inputs?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Use input().split() and map(int, ...) to read N, K, and the problem points efficiently. Read participant solutions using input().\",\n    \"Use a nested loop: an outer loop for each participant and an inner loop to iterate through the problems and check if they solved each problem based on their string.\",\n    \"Use a loop to iterate through the number of test cases. Make sure to reset any variables specific to each test case before processing the next one.\",\n    \"Consider the constraints on N, K, and Ai. The sum of N*K should be at most 10^6, so avoid inefficient algorithms. There are no partial points, so if statement is needed to check Sij == '1'.\",\n    \"Test with sample inputs, including edge cases such as N or K being 1, all participants solving all problems, or no participant solving any problem. Compare your output with the expected output.\"\n  ]\n}\n```"