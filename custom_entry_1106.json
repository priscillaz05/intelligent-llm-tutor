"```json\n{\n  \"Coding Problem\": \"Given a set of numbers, return the additive inverse of each. Each positive becomes negatives, and the negatives become positives.\",\n  \"Ground Truth Solution\": \"def invert(lst):\\n\\treturn [-x for x in lst]\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding Problem Requirements: The task is to create a new list where each number has its sign inverted (positive to negative and vice versa). The input list should not be modified.\\n- Choosing an Algorithm:  List comprehension is a concise way to create a new list by applying an operation to each element of the original list.\\n- Implementation Considerations: Use a list comprehension to iterate through the input list and negate each element.\",\n  \"LLM Questions\": [\n    \"What is meant by \\\"additive inverse\\\" in the context of this problem?\",\n    \"How can you create a new list in Python based on the values of an existing list?\",\n    \"Does the solution need to modify the original list, or can it create a new list?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Additive inverse means changing the sign of the number, positive to negative, or negative to positive.\",\n    \"List comprehension is a concise way to create a new list by applying an operation to each element of the original list.\",\n    \"The problem statement indicates that the original list/array should not be mutated, and a new list should be returned.\"\n  ]\n}\n```"