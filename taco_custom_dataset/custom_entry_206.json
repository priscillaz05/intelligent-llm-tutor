"```json\n{\n  \"Coding Problem\": \"Bangalore City, where peace prevails most of the time. Not everyone is a huge fan of peace, though. Certainly not Mr. XYZ, whose identity is not known to us - yet. Mr. XYZ has somehow managed to bring vampires and zombies to Bangalore City to attack and destroy the city.\\n\\nFatal Eagle, an ordinary citizen of the city is extremely worried on seeing his city being attacked by these weird creatures. But, as of now, he has no power to stop these creatures from their silent attacks. He wants to analyze these creatures firstly. He figured out some things about these creatures, like:\\nZombies have power in terms of an EVEN number.\\nVampires have power in terms of an ODD number.\\n\\nIf he sees a zombie or a vampire, he marks them in his list with their power. After generating the entire list of power of these creatures, he decides to arrange this data in the following manner:\\nAll the zombies arranged in sorted manner of their power, followed by the total  power of zombies.  \\nAll the vampires arranged in sorted manner of their power, followed by the total  power of vampires.\\n\\nYou've to help him produce the following list to help him save his city.\\n\\nInput constraints:\\nThe first line of input will contain an integer \u2014 N, denoting the number of creatures. The next line will contain N integers denoting the elements of the list containing the power of zombies and vampires. \\n\\nOutput constraints:\\nPrint the required list in a single line.\\n\\nConstraints:\\n1 \u2264 N \u2264 10^3\\n1 \u2264 Ni \u2264 10^3\\n\\nSAMPLE INPUT\\n6\\n2 3 10 12 15 22\\n\\nSAMPLE OUTPUT\\n2 10 12 22 46 3 15 18\",\n  \"Ground Truth Solution\": \"cases=int(input())   \\nodd=[]\\neven=[]\\na=list(map(int,input().split()))   \\na.sort() \\nfor i in a:\\n\\tif i%2==0:\t\\n\\t\\teven.append(i)\\n\\telse:\\n\\t\\todd.append(i)   \\n\\t\\t\\nodd.append(sum(odd))                        \\neven.append(sum(even))\\nprint(' '.join(map(str,even)) ,' '.join(map(str,odd)))\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires segregating a list of integers into even (zombie power) and odd (vampire power) numbers, sorting each list, and then summing the values in each list. Finally, the even numbers, followed by their sum, and the odd numbers, followed by their sum, are printed as a single line of space-separated values.\\n- Data Structures: Two lists, one for even numbers and one for odd numbers, are needed to store the power of zombies and vampires respectively. The input is a list of integers.  The final output should be a string of space-separated integers.\\n- Algorithm:\\n  1. Read the number of creatures, N, from the input.\\n  2. Read the list of N integers representing the powers of the creatures.\\n  3. Initialize two empty lists, `even` and `odd`.\\n  4. Iterate through the input list and append each number to `even` if it's even, and to `odd` if it's odd.\\n  5. Sort both the `even` and `odd` lists in ascending order.\\n  6. Calculate the sum of the elements in the `even` list and append it to the `even` list.\\n  7. Calculate the sum of the elements in the `odd` list and append it to the `odd` list.\\n  8. Convert both lists to strings separated by spaces, concatenate them and print the final output.\",\n  \"LLM Questions\": [\n    \"How do you determine if a number represents the power of a zombie or a vampire?\",\n    \"What is the purpose of sorting the even and odd lists?\",\n    \"How do you format the output to meet the problem's requirements?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"A number is considered the power of a zombie if it's even (divisible by 2), and the power of a vampire if it's odd.\",\n    \"Sorting the even and odd lists ensures that the powers of zombies and vampires are listed in ascending order, as specified in the problem description.\",\n    \"The output should be a single line of space-separated integers. First, print the sorted even numbers, followed by their sum, then print the sorted odd numbers, followed by their sum. Ensure a space between the even and odd sequences.\"\n  ]\n}\n```"