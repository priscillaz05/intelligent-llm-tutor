"```json\n{\n  \"Coding Problem\": \"One day, the Grasshopper was jumping on the lawn and found a piece of paper with a string. Grasshopper became interested what is the minimum jump ability he should have in order to be able to reach the far end of the string, jumping only on vowels of the English alphabet. Jump ability is the maximum possible length of his jump. \\n\\nFormally, consider that at the begginning the Grasshopper is located directly in front of the leftmost character of the string. His goal is to reach the position right after the rightmost character of the string. In one jump the Grasshopper could jump to the right any distance from 1 to the value of his jump ability. [Image] The picture corresponds to the first example. \\n\\nThe following letters are vowels: 'A', 'E', 'I', 'O', 'U' and 'Y'.\\n\\n\\n-----Input-----\\n\\nThe first line contains non-empty string consisting of capital English letters. It is guaranteed that the length of the string does not exceed 100. \\n\\n\\n-----Output-----\\n\\nPrint single integer a\\u00a0\\u2014 the minimum jump ability of the Grasshopper (in the number of symbols) that is needed to overcome the given string, jumping only on vowels.\\n\\n\\n-----Examples-----\\nInput\\nABABBBACFEYUKOTT\\n\\nOutput\\n4\\nInput\\nAAA\\n\\nOutput\\n1\",\n  \"Ground Truth Solution\": \"(last, res) = (-1, 0)\\ns = input()\\nfor (i, c) in enumerate(s):\\n\\tif c in 'AEIOUY':\\n\\t\\tres = max(res, i - last)\\n\\t\\tlast = i\\nres = max(res, len(s) - last)\\nprint(res)\",\n  \"LLM CoT Steps Breakdown\": \"- Understand the Problem: The grasshopper needs to jump to the end of the string, only landing on vowels. The task is to find the minimum jump ability needed, which is the maximum distance between consecutive vowels or between the start/end and the nearest vowels.\\n- Identify Edge Cases: Consider the cases when there are no vowels or when vowels are consecutive.\\n- Develop an Algorithm: Iterate through the string, keeping track of the last vowel encountered. Calculate the distance to the current vowel. The maximum of these distances is the minimum jump ability needed. Also, consider the distance between the last vowel and the end of the string, as well as the distance from the start of the string to the first vowel if exists.\\n- Consider Special Conditions: The input string consists of only uppercase letters. The length of the string is up to 100.\",\n  \"LLM Questions\": [\n    \"How do you define the jump ability of the grasshopper in this problem?\",\n    \"How can you determine the minimum jump ability required for the grasshopper to reach the end of the string, landing only on vowels?\",\n    \"What special conditions or edge cases might affect your solution, and how would you handle them?\",\n    \"What data structure can you use to store and update the distance between vowels as you traverse the array?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The jump ability is the maximum distance the grasshopper can jump in one step.\",\n    \"To determine the minimum jump ability, you need to find the maximum distance between any two consecutive vowels in the string, including the beginning (before the first character) and the end (after the last character).\",\n    \"Edge cases include when the string has no vowels, in which case the required jump ability is equal to the length of the string. Another case is when the vowels are next to each other, then we need jump ability equal to 1.\",\n    \"You can use a variable to keep track of the index of the last vowel encountered. As you iterate through the string, you can calculate the distance to the current vowel (if any) and update the maximum distance accordingly.\"\n  ]\n}\n```"