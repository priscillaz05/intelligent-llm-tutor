"```json\n{\n  \"Coding Problem\": \"Read problems statements in Mandarin Chinese  and Russian. \\n\\nThe apocalyptic demon Kali is on a rampage. The ground shudders under his feet, trees shrivel and animals and birds scurry away from his path. In order to save the universe from devastation, all the devtas led by devraj Indra decide to meditate to please Lord Vishnu so that he appears in the form of Kalki, his last avatar, and kill the demon.\\n\\nEach devta can sit in meditation at a particular place on Swarglok (the heaven). Considering Swarglok as a 2-dimensional plane, the position of each devta is a fixed point with integer coordinates. The positions of all the devtas are distinct from each other.\\n\\nWhile meditating the devtas connect to each other by means of astral projections - metaphysical threads that connect one devta to another. They must do so in such a way to satisfy two criteria:\\n\\nEach devta must be able to connect to every other devta by following a path of astral projections.\\nNo subgroup of devtas may be connected by a cycle of astral projections.\\n\\nIn simple terms, the astral projections must form a tree connecting all devtas.\\n\\nWhat needs to be optimized ?\\n\\nOnce the devtas have taken their positions and are connected as a single group to start meditation, a ring of influence is formed around each devta. This ring is centered at the position of the devta, and has a radius equal to the Euclidean distance from this devta to the furthest devta directly connected via an astral projection.\\n\\nSince different devtas have their own supernatural powers (Indra is the rain god, Agni is the fire god,Varuna is the water god, Vayu is the air god , etc), the influence ring of each devta has an adverse effect on all other devtas which lie within or on this ring. In other words, the efficiency of a devta to perform meditation decreases as the number of influence rings that include him increases.\\n\\nFor each devta D_{i}, define C_{i} as the number of influence rings that include or touch D_{i} (including their own). Now devraj Indra wants the devtas to connect in such a manner so as to minimize the maximum value of C_{i} over all devtas. So he has sent a message to Bhulok (the earth) and he needs help from the best programmers on the planet.\\n\\n------ Input ------ \\n\\nThe first line contains the number of test cases T.\\nEach test case starts with an integer N, where N denotes the number of devtas.\\nThen N lines follow - the i-th such line consists of two integers x_{i} and y_{i}, specifying the coordinates of the i-th devta.\\n \\n------ Output ------ \\n\\nFor each test case output exactly N-1 lines. Each line should consist of two integers, specifying a pair of devtas between whom an astral projection should be formed.\\n \\n------ Constraints ------ \\n\\n$1 \u2264 T \u2264 100$\\n$3 \u2264 N \u2264 400$\\n$-2000 \u2264 x _{i} \u2264 2000$\\n$-2000 \u2264 y _{i} \u2264 2000$\\n\\nScoring and test data generation \\nThe score is C, where C = max(C_{i}) for 1 \u2264 i \u2264 N. The sequence of positions for devtas is generated randomly and the positions are distributed uniformly.\\n\\n------ Example ------ \\n\\nInput:\\n1\\n5\\n-3 0\\n-1 0\\n0 1\\n1 0\\n2 0\\n\\nExample of a valid output:\\n1 2\\n2 3\\n3 4\\n4 5\\n\\n------ Explanation ------ \\n\\nThe second devta is connected to two other devtas: the first devta (a distance of 2 away), and the third devta (a distance of sqrt(2) away). The larger of these distances is 2, so the radius of the second devta's ring of influence is 2. We can calculate the other rings similarly.\\n\\nHere is a diagram with the astral projections represented in red, and all of the influence rings represented in blue.\\n\\nThe second devta lies within three rings of influence - the first devta's, the second devta's himself, and the third devta's. We can calculate the other values similarly:\\n\\nC_{1} = 2; C_{2} = 3; C_{3} = 3; C_{4} = 4; C_{5} = 2.\\n\\nThe maximum of these values is 4, so you would get a score of 4.\\n\\nOther possible outputs may result in higher or lower scores. Your objective is to minimize your score.\",\n  \"Ground Truth Solution\": \"distance = lambda x1, y1, x2, y2: (x2 - x1) ** 2 + (y2 - y1) ** 2 * 0.5\\nfor i in range(int(input())):\\n\\tn = int(input())\\n\\tpoints = []\\n\\tfor i in range(n):\\n\\t\\t(a, b) = map(int, input().split())\\n\\t\\tpoints.append([a, b])\\n\\ty = None\\n\\tfor j in range(n - 1):\\n\\t\\tnk = j + 1\\n\\t\\tfor k in range(j + 1, n):\\n\\t\\t\\tx = distance(points[j][0], points[j][1], points[k][0], points[k][1])\\n\\t\\t\\tif y == None or x < y:\\n\\t\\t\\t\\ty = x\\n\\t\\t\\t\\tnk = k\\n\\t\\tprint(j + 1, nk + 1)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires connecting N devtas (points in a 2D plane) with N-1 astral projections (edges) to form a tree. The goal is to minimize the maximum number of influence rings any devta is within, where an influence ring's radius is determined by the distance to the furthest directly connected devta.\\n- Algorithmic Strategy: The problem is an optimization problem, seeking to minimize the maximum 'influence count' of any devta. A greedy approach can be used to create the tree, connecting each devta to its nearest neighbor in each step.\\n- Implementation Details: Read the input data, calculate the Euclidean distance between all pairs of devtas. Build the tree iteratively by adding the shortest possible edge at each step, avoiding cycles. Output the selected edges.\",\n  \"LLM Questions\": [\n    \"How is the influence ring defined for each devta, and what parameters influence its radius?\",\n    \"What are the key constraints that the astral projections must satisfy (in other words, what makes a valid solution)?\",\n    \"How can a greedy algorithm be applied to solve this problem, and what criteria should be used to select the next astral projection to create?\",\n    \"How is the score calculated for a given solution, and what does the problem objective mean in terms of this score?\",\n    \"How do I prevent cycles from being formed when choosing which pairs of devtas to connect?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The influence ring is centered on a devta, and its radius is the Euclidean distance to the furthest devta that is directly connected to it via an astral projection.\",\n    \"The astral projections must form a tree, meaning that all devtas must be connected, but there cannot be any cycles.\",\n    \"A greedy algorithm can be used to iteratively connect devtas by selecting the shortest possible edge (astral projection) at each step. It could mean always linking to the closest available neighbor to try to minimize the ring radius.\",\n    \"The score is the maximum number of influence rings that any devta lies within (including its own). The goal is to find a connection scheme that minimizes this maximum overlap.\",\n    \"A standard way to prevent cycles when building a tree is to keep track of connected components (using a disjoint-set data structure like Union-Find). Only add edges between nodes in different components.\"\n  ]\n}\n```"