"```json\n{\n  \"Coding Problem\": \"Simon: On the fountain, there should be 2 jugs - a 5 gallon and a 3 gallon. Do you see them? Fill one of the jugs with exactly 4 gallons of water and place it on the scale and the timer will stop. You must be precise; one ounce more or less will result in detonation. If you\u2019re still alive in 5 minutes, we\u2019ll speak. \\n\\nBruce: Wait, wait a second. I don\u2019t get it. Do you get it?   \\n\\nSamuel: No. \\n\\nBruce: Get the jugs. Obviously, we can\u2019t \ufb01ll the 3 gallon jug with 4 gallons of water. \\n\\nSamuel: Obviously. \\n\\nBruce: All right. I know, here we go. We \ufb01ll the 3 gallon jug exactly to the top, right? \\n\\nSamuel: Uh huh. \\n\\nBruce: Okay, now we pour this 3 gallons into the 5 gallon jug, giving us exactly 3 gallons in the 5 gallon jug, right? \\n\\nSamuel: Right, then what? \\n\\nBruce: We take the 3 gallon jug and \ufb01ll it a third of the way... \\n\\nSamuel: No! He said, \u201cBe precise.\u201d Exactly 4 gallons. \\n\\nBruce: Damn! Every cop within 50 miles is running his ass off and I\u2019m out here playing a kids' games in the park. \\n\\nSamuel: Hey, you want to focus on the problem at hand? \\n\\nGiven 2 jugs of capacity a and b gallons, and an infinite supply of water, can you fill one of the jugs with exactly c gallons of water ? \\n\\nInput Format\\n\\nFirst line contains the number of testcases T. T lines follow. \\n\\nEach line contains 3 space separated integers a, b and c . a and b indicate the capacity of the two jugs respectively, and c denotes the exact capacity with which one of the jugs should be filled.  \\n\\nOutput Format\\n\\nFor each test case, print \\\"YES\\\" (in a new line) if one of the jugs can be filled with exactly c gallons of water and \\\"NO\\\" (in a new line) if they cannot be filled. ( quotes are for clarity )\\n\\nConstraints\\n\\n1 \u2264 a, b, c \u2264 10^{3} \\n\\n1 \u2264 T \u2264 100\\n\\nSample Input\\n\\n2\\n5 3 4\\n3 6 4\\n\\nSample Output\\n\\nYES\\nNO\\n\\nExplanation\\n\\nBruce can do the following, fill jug a with 5 gallons. \\n\\na = 5, b = 0\\n\\nNow, he can fill jug b with 3 gallons from jug a.  \\n\\na = 2, b = 3\\n\\nHe can empty jug b and empty 2 gallons from jug a to jug b.  \\n\\na = 0, b = 2\\n\\nNow, he can fill jug a with 5 gallons and fill jug b with 1 gallon from jug a.  This results in jug a containing exactly 4 gallons of water.  \\n\\na = 5, b = 2\\na = 4, b = 3\\n\\nIn the second testcase, it is impossible to generate 4 gallons of water, hence NO.\",\n  \"Ground Truth Solution\": \"from fractions import gcd\\nimport fractions\\n\\ndef ok(a, b, c):\\n\\tif c >= a and c >= b:\\n\\t\\treturn False\\n\\telse:\\n\\t\\tgcd = fractions.gcd(a, b)\\n\\t\\tif c % gcd == 0:\\n\\t\\t\\treturn True\\n\\t\\telse:\\n\\t\\t\\treturn False\\nsa = int(input())\\nfor t in range(sa):\\n\\tsa2 = input().split(' ')\\n\\tif ok(int(sa2[0]), int(sa2[1]), int(sa2[2])):\\n\\t\\tprint('YES')\\n\\telse:\\n\\t\\tprint('NO')\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem asks whether a given amount of water 'c' can be obtained in either of two jugs with capacities 'a' and 'b', given an infinite water supply.\\n- Identifying the Key Condition: Determine that the problem is solvable if 'c' is less than or equal to either 'a' or 'b' AND 'c' is a multiple of the greatest common divisor (GCD) of 'a' and 'b'. If c is greater than a and b, it is not possible.\\n- Choosing Appropriate Tools: Consider using the 'fractions.gcd' function to calculate the GCD of 'a' and 'b'.\\n- Implementing the Solution: Check if 'c' is less than or equal to 'a' or 'b'. Compute the GCD of 'a' and 'b'. Then, check if 'c' is a multiple of the GCD. Return 'YES' if both conditions are met; otherwise, return 'NO'.\",\n  \"LLM Questions\": [\n    \"How does the greatest common divisor (GCD) of the jug capacities relate to the possible volumes that can be measured?\",\n    \"Why is it important to check if c is less than or equal to a or b before checking the GCD condition?\",\n    \"What are some edge cases that should be handled in this problem, and how do they affect the solution?\",\n    \"How can you efficiently calculate the GCD of two numbers in Python?\",\n    \"Can you describe a scenario where the GCD condition is met, but it is still impossible to measure exactly 'c' gallons?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The GCD represents the smallest possible amount that can be measured using the two jugs through a series of filling and emptying operations. Any measurable volume must be a multiple of the GCD.\",\n    \"Because the problem states that we must fill *one* of the jugs with exactly c gallons. Therefore, c must be less than or equal to the capacity of at least one of the jugs, 'a' or 'b'.\",\n    \"An edge case is when 'c' is greater than both 'a' and 'b'. In this case, it's impossible to fill any of the jugs with 'c' gallons. Also, if a or b is zero, then only the value of the other non-zero jug can be obtained. If both are zero, only c=0 is possible.\",\n    \"You can use the `fractions.gcd(a, b)` function from the `fractions` module or `math.gcd(a, b)` from the `math` module (Python 3.5+) to efficiently calculate the GCD of two numbers.\",\n    \"While rare given the constraints, if `c` is greater than both `a` and `b`, even if it's a multiple of their GCD, it is still impossible to measure `c` because you are limited by the maximum volumes `a` and `b`. The problem requires filling *one* of the jugs with exactly `c` gallons.\"\n  ]\n}\n```"