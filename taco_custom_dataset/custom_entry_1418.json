"```json\n{\n  \"Coding Problem\": \"Chef got in the trouble! He is the king of Chefland and Chessland. There is one queen in Chefland and one queen in Chessland and they both want a relationship with him. Chef is standing before a difficult choice\u2026\\nChessland may be considered a chessboard with $N$ rows (numbered $1$ through $N$) and $M$ columns (numbered $1$ through $M$). Let's denote a unit square in row $r$ and column $c$ by $(r, c)$. Chef lives at square $(X, Y)$ of this chessboard.\\nCurrently, both queens are living in Chessland too. Each queen, when alone on the chessboard, can see all squares that lie on the same row, column or diagonal as itself. A queen from $(x_q, y_q)$ cannot see a square $(r, c)$ if the square $(X, Y)$ is strictly between them. Of course, if the queens can see each other, the kingdom will soon be in chaos!\\nHelp Chef calculate the number of possible configurations of the queens such that the kingdom will not be in chaos. A configuration is an unordered pair of distinct squares $(x_{q1}, y_{q1})$ and $(x_{q2}, y_{q2})$ such that neither of them is the square $(X, Y)$. Two configurations are different if the position of queen $1$ is different or the position of queen $2$ is different.\\n\\n-----Input-----\\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\\n- The first and only line of each test case contains four space-separated integers $N$, $M$, $X$ and $Y$. \\n\\n-----Output-----\\nFor each test case, print a single line containing one integer \u2014 the number of configurations such that the kingdom will not be in chaos.\\n\\n-----Constraints-----\\n- $1 \\\\le T \\\\le 1000$\\n- $1 \\\\le X \\\\le N \\\\le 10^2$\\n- $1 \\\\le Y \\\\le M \\\\le 10^2$\\n- $2 \\\\le N, M$\\n\\n-----Example Input-----\\n2\\n3 3 2 2\\n4 4 2 3\\n\\n-----Example Output-----\\n24\\n94\\n\\n-----Explanation-----\\nExample case 1: Half of these configurations are:\\n- $(1, 1), (3, 3)$\\n- $(1, 1), (2, 3)$\\n- $(1, 1), (3, 2)$\\n- $(1, 2), (3, 3)$\\n- $(1, 2), (3, 2)$\\n- $(1, 2), (3, 1)$\\n- $(1, 3), (3, 1)$\\n- $(1, 3), (3, 2)$\\n- $(1, 3), (2, 1)$\\n- $(2, 1), (2, 3)$\\n- $(2, 1), (1, 3)$\\n- $(2, 1), (3, 3)$\",\n  \"Ground Truth Solution\": \"def C(n):\\n\\treturn n * (n - 1) // 2\\n\\ndef sol():\\n\\t(equal, mini) = (False, min(N, M))\\n\\ttotal_ways = 2 * C(N * M)\\n\\tif N == M:\\n\\t\\tequal = True\\n\\tways = 0\\n\\tif not equal:\\n\\t\\tways = N * C(M) + M * C(N)\\n\\t\\tdiag = 0\\n\\t\\tfor i in range(2, mini + 1):\\n\\t\\t\\tdiag += 2 * C(i)\\n\\t\\tfor i in range(mini + 1, max(N, M)):\\n\\t\\t\\tdiag += C(mini)\\n\\t\\tdiag *= 2\\n\\t\\tways += diag\\n\\t\\tways *= 2\\n\\telse:\\n\\t\\tways = N * C(M) + M * C(N)\\n\\t\\tdiag = 0\\n\\t\\tfor i in range(2, mini):\\n\\t\\t\\tdiag += 2 * C(i)\\n\\t\\tdiag += C(mini)\\n\\t\\tdiag *= 2\\n\\t\\tways += diag\\n\\t\\tways *= 2\\n\\tsafe = total_ways - ways\\n\\t(l, r, t, d) = (Y - 1, M - Y, X - 1, N - X)\\n\\t(safe_add, to_remove) = (0, 0)\\n\\tfor i in range(1, N + 1):\\n\\t\\tfor j in range(1, M + 1):\\n\\t\\t\\tif i == X or j == Y or abs(i - X) == abs(j - Y):\\n\\t\\t\\t\\tcontinue\\n\\t\\t\\telse:\\n\\t\\t\\t\\tto_remove += 1\\n\\tif l > 0 and r > 0 and (t > 0) and (d > 0):\\n\\t\\t(dtl, dtr, dbl, dbr) = (min(l, t), min(r, t), min(l, d), min(r, d))\\n\\t\\tsafe_add += dtl * dbr * 2 + dtr * dbl * 2\\n\\t\\tsafe_add += t * d * 2\\n\\t\\tsafe_add += l * r * 2\\n\\telif l > 0 and r > 0:\\n\\t\\tsafe_add += l * r * 2\\n\\telif t > 0 and d > 0:\\n\\t\\tsafe_add += t * d * 2\\n\\tsafe += safe_add - to_remove * 2\\n\\treturn safe\\nT = int(input())\\nfor _ in range(T):\\n\\t(N, M, X, Y) = [int(x) for x in input().split()]\\n\\tprint(sol())\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem asks to calculate the number of safe queen configurations on an NxM chessboard, given Chef's location (X, Y). Queens can't see each other if Chef's location is strictly between them. Need to count unordered pairs of distinct squares where the queens don't see each other and neither square is Chef's location.\\n- Identifying Constraints and Edge Cases: N and M are between 2 and 100. X is between 1 and N, and Y is between 1 and M. Need to handle cases where N=M, and also consider when queens are in the same row, column or diagonals. Important consideration is that Chef's location blocks the line of sight.\\n- Devising a Strategy: Calculate total number of possible queen configurations. Then, count the unsafe configurations where the queens can see each other. Subtract the unsafe configurations from the total. It's crucial to accurately determine which configurations are safe, considering the blocking effect of the cell (X,Y). Using inclusion-exclusion might be relevant.\\n- Implementation Details: To determine if two queens can see each other check the same row/column, or diagonal. However, the problem statement has an exception to this rule; if Chef is between the two queens, they cannot see each other. The edge cases, like when N equals M, will affect the number of diagonals, so keep this in mind.\",\n  \"LLM Questions\": [\n    \"What are the dimensions of the board and where is Chef located?\",\n    \"How can two queens 'see' each other on a chessboard, and what exception is present in this problem?\",\n    \"How can the total number of possible queen configurations be calculated?\",\n    \"What strategy could be used to identify and count the 'unsafe' queen configurations?\",\n    \"What conditions are necessary to determine if Chef is 'between' two queens?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The board dimensions are N rows and M columns. Chef is located at square (X, Y).\",\n    \"Queens can see each other if they are in the same row, same column, or same diagonal. If Chef's location is strictly between the two queens, they cannot see each other.\",\n    \"The total number of possible queen configurations is C(N*M - 1, 2) = (N*M - 1) * (N*M - 2) / 2 because the queens can be on any space that are not the location of Chef.\",\n    \"Calculate the number of queen configurations where they are in the same row, column, or diagonal, and Chef is not between them. These configurations are 'unsafe'.\",\n    \"Chef is 'between' two queens if they are in the same row/column/diagonal, and Chef's coordinates on that row/column/diagonal fall between the coordinates of the two queens.\"\n  ]\n}\n```"