"```json\n{\n  \"Coding Problem\": \"There is a special game played in remote part of Rajasthan, where all people assemble with their all wealth and try to earn more wealth on the account of their current wealth.\\n\\nSuppose you are also a part of this game.\\n\\nThe game is like, there are N people playing the game where everyone has its wealth. You are given with the information about the wealth of all other people.\\nThere is also a M number of groups, where each person is assigned a group id and the top half of the group in terms of wealth move forward to the next level of the game.\\nThe group id is assigned by first arranging all the persons in decreasing order their wealth, like person with highest wealth get group id 1 ,the next one 2 and similarly upto M then again the cycle repeats.\\n\\nYou wish to win in your group, so you wonder how many more wealthier people you have in your group. Print the number of people in your group who have more wealth than you.\\n\\nInput:\\nFirst line of input contains an integer T which denoted the number of test cases, each test case contains two lines of input where first line of test case contains two space separated integers nR nG where nR is the number of people and nG is the number of groups available for assignment.\\n\\nThe next line of test case contains nR space separated integers wealth[i], which represents the wealth of ith person playing the game where the first number represents your own wealth.\\n\\nOutput:\\nFor each test case output the number of wealthier person than you in your own group in a line.\\n\\nConstraint:\\n\\n1 \u2264 T \u2264 10,000\\n1 \u2264 nG \u2264 nR \u2264 100\\n \u2264 wealth[i] \u2264 5000\\n\\nSAMPLE INPUT\\n3\\n12 11\\n1640 3997 4133 4282 3130 3938 4628 1138 4474 4534 2218 1293 \\n1 1\\n2491 \\n15 6\\n1242 3342 4797 4252 811 4955 76 4298 3753 1104 168 17 2364 1207 4764\\n\\nSAMPLE OUTPUT\\n0\\n0\\n1\",\n  \"Ground Truth Solution\": \"t=eval(input())\\nfor _ in range(t):\\n\\tn,g=list(map(int,input().split()))\\n\\tw=list(map(int,input().split()))\\n\\tmw=w[0]\\n\\tricher=0\\n\\tfor i in range(1,n):\\n\\t\\tif w[i]>mw:\\n\\t\\t\\tricher+=1\\n\\tprint(richer/g)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem describes a game where people are assigned to groups and the goal is to find out how many people in your group have more wealth than you.\\n- Identifying Key Information: The first number in the wealth array is your wealth. The groups are formed based on descending order of wealth.\\n- Algorithm: Iterate through the wealth array and count the number of people wealthier than you who belong to the same group as you. The group assignment repeats from 1 to M.\\n- Calculating Group Membership: To determine if someone is in the same group, we need to understand how group IDs are assigned. The assignment cycles through groups 1 to M. Thus, the group ID of a person is their rank modulo M. In this case, we can simply check all those richer than you. However the provided code does not do this correctly since it does not take group into account.\\n- Addressing Pitfalls: The question asks for only the number of wealthier people in your group. Not taking this into account will cause an incorrect answer.\",\n  \"LLM Questions\": [\n    \"How do you determine your group ID and the group ID of other players?\",\n    \"How can you efficiently determine if another player belongs to your group?\",\n    \"How do you account for the cyclical nature of group assignments?\",\n    \"How can you ensure you are only comparing players within your group when counting wealthier players?\",\n    \"Given the input format, how do you extract your wealth and the wealth of other players?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Your group ID is determined by your rank in wealth modulo the number of groups M. The wealths are sorted in descending order and given rank, from 1 to N, and then each is assigned a group from 1 to M in cyclical order. The rank is implicit based on their position in the unsorted list of wealths.\",\n    \"You can determine if another player belongs to your group by comparing their group ID to yours.\",\n    \"The cyclical nature of group assignments means that group IDs repeat every M players. The first player will be assigned to group 1, the second to group 2 and up to group M. The player M+1 will be assigned group 1 again.\",\n    \"When counting wealthier players, you need to check if they are in your group and only increment the count if they are both wealthier and in the same group.\",\n    \"From the input, your wealth is the first element in the wealth array, and the wealth of other players is the remaining elements in the array. You can extract your wealth by accessing the first element of the array, and then compare with all other wealths.\"\n  ]\n}\n```"