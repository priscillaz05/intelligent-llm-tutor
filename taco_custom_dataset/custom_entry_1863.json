"```json\n{\n  \"Coding Problem\": \"You are given two positive integers $n$ and $s$. Find the maximum possible median of an array of $n$ non-negative integers (not necessarily distinct), such that the sum of its elements is equal to $s$.\\n\\nA median of an array of integers of length $m$ is the number standing on the $\\\\lceil {\\\\frac{m}{2}} \\\\rceil$-th (rounding up) position in the non-decreasing ordering of its elements. Positions are numbered starting from $1$. For example, a median of the array $[20,40,20,50,50,30]$ is the $\\\\lceil \\\\frac{m}{2} \\\\rceil$-th element of $[20,20,30,40,50,50]$, so it is $30$. There exist other definitions of the median, but in this problem we use the described definition.\\n\\n\\n-----Input-----\\n\\nThe input consists of multiple test cases. The first line contains a single integer $t$ ($1 \\\\le t \\\\le 10^4$) \u2014 the number of test cases. Description of the test cases follows.\\n\\nEach test case contains a single line with two integers $n$ and $s$ ($1 \\\\le n, s \\\\le 10^9$) \u2014 the length of the array and the required sum of the elements.\\n\\n\\n-----Output-----\\n\\nFor each test case print a single integer \u2014 the maximum possible median.\\n\\n\\n-----Examples-----\\n\\nInput\\n8\\n1 5\\n2 5\\n3 5\\n2 1\\n7 17\\n4 14\\n1 1000000000\\n1000000000 1\\nOutput\\n5\\n2\\n2\\n0\\n4\\n4\\n1000000000\\n0\\n\\n\\n-----Note-----\\n\\nPossible arrays for the first three test cases (in each array the median is underlined):\\n\\nIn the first test case $[\\\\underline{5}]$\\n\\nIn the second test case $[\\\\underline{2}, 3]$\\n\\nIn the third test case $[1, \\\\underline{2}, 2]$\",\n  \"Ground Truth Solution\": \"from sys import stdin, stdout\\nt = int(stdin.readline())\\nwhile t > 0:\\n\\t(n, s) = map(int, stdin.readline().split())\\n\\tls = s\\n\\tres = ls // (n - (n - 1) // 2)\\n\\tprint(res)\\n\\tt = t - 1\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The task is to find the maximum possible median of an array of n non-negative integers such that the sum of its elements is equal to s.\\n- Identify Key Constraints: The array must have n elements, the elements must be non-negative, and their sum must be s. The goal is to maximize the median.\\n- Develop a Strategy: To maximize the median, we want to minimize the elements before the median. Consider setting the first (n-1)/2 elements to 0 to maximize the value of the median.\\n- Mathematical Formulation: The median is at position (n+1)//2 (integer division). If we set the first n - (n+1)//2 +1 elements to 0 then how to find the largest number for the rest elements with sum to s. Then we should make them all equal so as to maximize the median value. so the rest element value should be s / (n - (n-1)//2).\\n- Edge Cases and Optimizations: Handle cases where n is 1 or s is 0 appropriately.\",\n  \"LLM Questions\": [\n    \"What are the constraints on the elements of the array?\",\n    \"What does 'maximum possible median' mean in the context of this problem?\",\n    \"How can we minimize the elements before the median to maximize the median itself?\",\n    \"How do you define the position of the median?\",\n    \"How do you handle the integer division?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The elements must be non-negative integers, and their sum must be equal to s.\",\n    \"It means finding the largest possible value that can be at the median position, given the constraints.\",\n    \"We can set the elements before the median to their minimum possible value, which is 0.\",\n    \"The median is at position (n+1)//2 (using 1-based indexing and integer division).\",\n    \"Integer division truncates the decimal part, giving you the quotient without the remainder. Use // operator for integer division.\"\n  ]\n}\n```"