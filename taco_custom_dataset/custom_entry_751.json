"```json\n{\n  \"Coding Problem\": \"Read problem statements in [Hindi], [Bengali], [Mandarin Chinese], [Russian], and [Vietnamese] as well.\\n\\nChef and Chefu are working as gold miners. There are a total of $N$ gold mines, numbered $1$ through $N$. For each valid $i$, the $i$-th gold mine contains $G_{i}$ gold in total; if only Chef worked in it, it would take him $A_{i}$ days to completely mine it, while if only Chefu worked in it, it would take him $B_{i}$ days.\\n\\nEach of our miners may only work in one mine at a time, but they may decide to start working in another mine at any time (even in the middle of some day), any number of times. They also choose the mines to work in independently from each other and they may work in the same mine at the same time. Mining gold is a continuous process, i.e. if a miner works for $t$ days (where $t$ is a real number) in a mine where this miner has mining speed $g$ gold per day, then he will mine $g \\\\cdot t$ gold. Obviously, it is impossible to work in a mine after no gold remains in it. For example, if a gold mine contains $30$ gold and Chef needs $2$ days to completely mine it, but he spends $1$ day in it, then he will mine $15$ gold; if Chefu needs $1$ day to completely mine the same gold mine, and both Chef and Chefu start working in this mine at the same time, it will be empty after $2/3$ days \u2015 Chefu will mine $20$ gold, while Chef will mine $10$ gold.\\n\\nAt each point of time, both Chef and Chefu know the gold mine in which the other miner is working. Each of them wants to gather the maximum amount of gold for himself. Find the amounts of gold the miners will have if they both act optimally.\\n\\n------ Input ------\\nThe first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\\nThe first line of each test case contains a single integer $N$.\\n$N$ lines follow. For each valid $i$, the $i$-th of these lines contains three space-separated integers $G_{i}$, $A_{i}$ and $B_{i}$.\\n\\n------ Output ------\\nFor each test case, print a single line containing two space-separated real numbers \u2015 the amount of gold mined by Chef and the amount of gold mined by Chefu. Your answer will be considered correct if the absolute or relative error of each amount of gold does not exceed $10^{-6}$.\\n\\n------ Constraints ------\\n$1 \u2264 T \u2264 1,000$\\n$1 \u2264 N \u2264 10^{5}$\\n$1 \u2264 G_{i} \u2264 10^{5}$ for each valid $i$\\n$1 \u2264 A_{i} \u2264 10^{5}$ for each valid $i$\\n$1 \u2264 B_{i} \u2264 10^{5}$ for each valid $i$\\nthe sum of $N$ over all test cases does not exceed $10^{6}$\\n\\n------ Subtasks ------\\nSubtask #1 (50 points): $N \u2264 2$\\n\\nSubtask #2 (50 points): original constraints\\n\\n----- Sample Input 1 ------ \\n2\\n\\n1\\n\\n30 2 1\\n\\n3\\n\\n10 1 1\\n\\n20 2 2\\n\\n30 3 3\\n----- Sample Output 1 ------ \\n10.00000 20.00000\\n\\n30.00000 30.00000\",\n  \"Ground Truth Solution\": \"def Code():\\n\\tT = int(input())\\n\\tfor i in range(T):\\n\\t\\tN = int(input())\\n\\t\\tsum_A = 0\\n\\t\\tsum_B = 0\\n\\t\\tfor i in range(N):\\n\\t\\t\\tx = list(map(int, input().split()))\\n\\t\\t\\tsum_A = sum_A + x[0] * x[2] / (x[1] + x[2])\\n\\t\\t\\tsum_B = sum_B + x[0] * x[1] / (x[1] + x[2])\\n\\t\\tprint('{0:.10f}'.format(sum_A), '{0:.10f}'.format(sum_B))\\nCode()\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: Chef and Chefu mine gold from N mines. Each mine has a total gold $G_i$. Chef takes $A_i$ days and Chefu takes $B_i$ days to mine a mine completely by themselves. They can work simultaneously on the same mine, and they know which mine the other miner is currently working on. The objective is to find the amount of gold each miner will have at the end, assuming both act optimally.\\n- Formulating the Optimal Strategy: The key is to realize that when they mine together, they split the gold based on their relative speeds. Chef's speed is $G_i/A_i$ and Chefu's speed is $G_i/B_i$. The fraction of gold Chef gets is $G_i/A_i / (G_i/A_i + G_i/B_i) = B_i / (A_i + B_i)$. Similarly, Chefu gets $A_i / (A_i + B_i)$. We want to calculate the total gold each person gets by summing over all mines.\\n- Implementation Details: Read the input, iterate through the mines, compute the gold fraction each miner gets from each mine, and sum these values. Output the result with 10 decimal places.\",\n  \"LLM Questions\": [\n    \"How is the gold divided when Chef and Chefu work on the same mine simultaneously?\",\n    \"How do you calculate each miner's share of gold from a specific mine?\",\n    \"What are the important implementation details for calculating and outputting the final amounts of gold?\",\n    \"What edge cases should be considered, and how does the problem's formulation account for them?\",\n    \"How can the code avoid exceeding time limits with the given constraints?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The gold is divided proportionally to their mining speeds. If they work together on mine i, Chef's fraction is B_i / (A_i + B_i) and Chefu's fraction is A_i / (A_i + B_i).\",\n    \"Chef's share of gold from mine i is G_i * B_i / (A_i + B_i), and Chefu's share is G_i * A_i / (A_i + B_i).\",\n    \"Read the number of test cases and for each case, read the number of mines. Iterate through the mines, read G_i, A_i, and B_i for each mine, and update the total gold for Chef and Chefu accordingly. Output the results with 10 decimal places using string formatting.\",\n    \"The problem statement doesn't mention specific edge cases that need separate handling; the formulation correctly handles cases where one of A_i or B_i is very small or large relative to the gold amount.\",\n    \"The problem constraints allow for up to 1000 test cases and 10^5 mines per case, but the solution involves a simple iterative calculation and therefore runs in linear time, so time limits are not a concern.\"\n  ]\n}\n```"