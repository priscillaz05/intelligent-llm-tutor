"```json\n{\n  \"Coding Problem\": \"Students Vasya and Petya are studying at the BSU (Byteland State University). At one of the breaks they decided to order a pizza. In this problem pizza is a circle of some radius. The pizza was delivered already cut into n pieces. The i-th piece is a sector of angle equal to a_{i}. Vasya and Petya want to divide all pieces of pizza into two continuous sectors in such way that the difference between angles of these sectors is minimal. Sector angle is sum of angles of all pieces in it. Pay attention, that one of sectors can be empty.\\n\\n\\n-----Input-----\\n\\nThe first line contains one integer n (1 \u2264 n \u2264 360)  \u2014 the number of pieces into which the delivered pizza was cut.\\n\\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 360)  \u2014 the angles of the sectors into which the pizza was cut. The sum of all a_{i} is 360.\\n\\n\\n-----Output-----\\n\\nPrint one integer  \u2014 the minimal difference between angles of sectors that will go to Vasya and Petya.\\n\\n\\n-----Examples-----\\nInput\\n4\\n90 90 90 90\\n\\nOutput\\n0\\n\\nInput\\n3\\n100 100 160\\n\\nOutput\\n40\\n\\nInput\\n1\\n360\\n\\nOutput\\n360\\n\\nInput\\n4\\n170 30 150 10\\n\\nOutput\\n0\\n\\n\\n\\n-----Note-----\\n\\nIn first sample Vasya can take 1 and 2 pieces, Petya can take 3 and 4 pieces. Then the answer is |(90 + 90) - (90 + 90)| = 0.\\n\\nIn third sample there is only one piece of pizza that can be taken by only one from Vasya and Petya. So the answer is |360 - 0| = 360.\\n\\nIn fourth sample Vasya can take 1 and 4 pieces, then Petya will take 2 and 3 pieces. So the answer is |(170 + 10) - (30 + 150)| = 0.\\n\\nPicture explaning fourth sample:\\n\\n[Image]\\n\\nBoth red and green sectors consist of two adjacent pieces of pizza. So Vasya can take green sector, then Petya will take red sector.\",\n  \"Ground Truth Solution\": \"def diff(val):\\n\\treturn 2 * abs(180 - val)\\nn = int(input())\\narr = input().split(' ')\\narr = [int(x) for x in arr]\\nsum = 0\\nmin_diff = 360\\nlast_idx = 0\\nfor a in arr:\\n\\tsum += a\\n\\tmin_diff = min(min_diff, diff(sum))\\n\\twhile sum > 180:\\n\\t\\tsum -= arr[last_idx]\\n\\t\\tlast_idx += 1\\n\\t\\tmin_diff = min(min_diff, diff(sum))\\n\\tif sum == 180:\\n\\t\\tmin_diff = 0\\n\\t\\tbreak\\nprint(min_diff)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The task is to divide a pizza, cut into n sectors, into two continuous sectors such that the absolute difference between the angles of these sectors is minimized.\\n- Considering Edge Cases: The number of sectors can range from 1 to 360. Each sector's angle is between 1 and 360, and the total sum of angles is 360. One of the sectors can be empty.\\n- Selecting an Algorithmic Approach: Since the sectors must be continuous, we can iterate through all possible continuous segments and calculate the difference between the sum of angles in that segment and its complement. The minimum of these differences is the answer.\\n- Optimizing the Iteration: We can use a sliding window technique to calculate the sum of each continuous segment efficiently.\\n- Calculating the Difference: The difference between the two sectors is `|sum_of_sector - (360 - sum_of_sector)| = |2 * sum_of_sector - 360| = 2 * |sum_of_sector - 180|`.\",\n  \"LLM Questions\": [\n    \"What does it mean for the sectors to be 'continuous' in this problem, and how does it restrict the possible divisions of the pizza?\",\n    \"How can we efficiently calculate the sum of angles for each possible continuous sector?\",\n    \"What is the range of possible values for the difference between the two sectors, and how can this inform our choice of initial value for `min_diff`?\",\n    \"How do we handle the case where one of the sectors is empty?\",\n    \"Given the formula `2 * abs(sum_of_sector - 180)`, is it possible to reduce computation by directly comparing `sum_of_sector` to 180 instead of calculating the entire expression in each iteration?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Continuous means the pieces in each sector are adjacent to each other. This limits the possible ways to divide the pizza into two continuous sectors.\",\n    \"We can use a sliding window technique to efficiently calculate the sum of angles for each continuous sector by adding the next angle and subtracting the first angle in the window.\",\n    \"The difference can range from 0 to 360. We can initialize `min_diff` to 360, since the difference can not exceed 360.\",\n    \"An empty sector is equivalent to taking a sector with sum 0. So when the window has length 0, the sum_of_sector is also 0. And this will be considered in the calculation.\",\n    \"Yes, we can calculate `abs(sum_of_sector - 180)` directly to reduce computation.\"\n  ]\n}\n```"