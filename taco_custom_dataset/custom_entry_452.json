"```json\n{\n  \"Coding Problem\": \"Radhika and Nandu decide to play a number game. Both play alternately, Rani playing the first move.\\n\\nIn each of their moves, they can subtract a maximum of k and a minimum of 1 from n   i.e. each of them must subtract from n, any natural number less than or equal to k , and the new value of n will be the result of this subtraction.\\n\\nThey continue playing this game until the value of n becomes zero or negative. The person to play the last move loses the game.\\n\\nBoth are super-intelligent and hence both play optimally. Given the values of n and k, find out the winner of the game.\\n\\nInput:\\n\\nFirst line consists of t, the number of test case. The next t lines are such that each line consists of two space separated integers n and k.\\n\\nOutput:\\n\\nPrint the answer to each test case on a new line, 'Rani' if the winner of the game is Rani and 'Nandu' if the winner of the game is Nandu.\\n\\nConstraints:\\n\\n1 \u2264 t \u2264 1000000\\n\\n1 \u2264 n \u2264 1000000.\\n\\n1 \u2264 k \u2264 n.\\n\\nSAMPLE INPUT\\n2\\n1 2\\n4 1\\n\\nSAMPLE OUTPUT\\nNandu\\nRani\\n\\nExplanation\\n\\nFor n=1 and k=2 1st move Rani : n = 1 - 1 = 0. Since, no more turn is possible and Radhika palyed the last move, she loses the game. So,the winner of the game is Nandu.\\n\\nFor n=4 and k=1 1st move Rani : n = 4 - 1 = 3, 2nd move Nandu : n = 3 - 1 = 2, third move Radhika n = 2 - 1 = 1 and last move Nandu n=1-1=0 Now, n has become zero/negative. So, the game is over. Since Nandu palyed the last move, he loses the game. So, the winner of the game is Radhika.\",\n  \"Ground Truth Solution\": \"for _ in range(int(input())):\\n\\tn, k = list(map(int, input().split()))\\n\\tprint(\\\"Nandu\\\" if n % (k + 1) == 1 else \\\"Rani\\\")\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding Game Rules: Realize that two players (Rani and Nandu) subtract a value between 1 and k (inclusive) from n in turns.\\n- Understanding Winning Condition: Determine that the player who makes n zero or negative loses. Thus, the other player wins.\\n- Optimal Play Consideration: Both players are optimal, so consider the endgame scenarios to determine the best strategy.\\n- Identifying the Pattern: Notice that if n % (k + 1) == 1, Nandu will win. Otherwise, Rani will win. This is because Rani wants to leave n % (k+1) == 1 for Nandu.\\n- Implementing the Logic: Use the modulo operator to determine the winner based on n and k.\",\n  \"LLM Questions\": [\n    \"How does each player affect the value of n in each turn, and what are the limitations on these changes?\",\n    \"What condition determines the end of the game, and how does the player who causes this condition lose?\",\n    \"If both players play optimally, can we determine a winning strategy based on the initial values of n and k?\",\n    \"What is the significance of the modulo operator in determining the winner, and how does n % (k + 1) influence the outcome?\",\n    \"How do the constraints on n and k affect the possible game states and the complexity of determining the winner?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Each player subtracts a value between 1 and k (inclusive) from n in their turn. So n = n - x where 1 <= x <= k.\",\n    \"The game ends when n becomes zero or negative. The player who makes the last move loses, meaning the other player wins.\",\n    \"Yes, considering both play optimally, there's a winning strategy based on n and k, focusing on leaving the opponent with a specific value after each turn.\",\n    \"The modulo operator helps determine the winner because it reveals how much 'extra' n has beyond multiples of (k+1). If n % (k+1) is 1, the second player (Nandu) wins. Otherwise, the first player (Rani) wins.\",\n    \"The constraints limit the number of possible game states, but they are still large. However, by using the modulo operator, we don't need to simulate each game state to determine the winner; we can do it directly.\"\n  ]\n}\n```"