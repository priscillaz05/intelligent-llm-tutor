"```json\n{\n  \"Coding Problem\": \"Every summer Vitya comes to visit his grandmother in the countryside. This summer, he got a huge wart. Every grandma knows that one should treat warts when the moon goes down. Thus, Vitya has to catch the moment when the moon is down.\\n\\nMoon cycle lasts 30 days. The size of the visible part of the moon (in Vitya's units) for each day is 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, and then cycle repeats, thus after the second 1 again goes 0.\\n\\nAs there is no internet in the countryside, Vitya has been watching the moon for n consecutive days and for each of these days he wrote down the size of the visible part of the moon. Help him find out whether the moon will be up or down next day, or this cannot be determined by the data he has.\\n\\n\\n-----Input-----\\n\\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 92)\\u00a0\u2014 the number of consecutive days Vitya was watching the size of the visible part of the moon.\\n\\nThe second line contains n integers a_{i} (0 \u2264 a_{i} \u2264 15)\\u00a0\u2014 Vitya's records.\\n\\nIt's guaranteed that the input data is consistent.\\n\\n\\n-----Output-----\\n\\nIf Vitya can be sure that the size of visible part of the moon on day n + 1 will be less than the size of the visible part on day n, then print \\\"DOWN\\\" at the only line of the output. If he might be sure that the size of the visible part will increase, then print \\\"UP\\\". If it's impossible to determine what exactly will happen with the moon, print -1.\\n\\n\\n-----Examples-----\\nInput\\n5\\n3 4 5 6 7\\n\\nOutput\\nUP\\n\\nInput\\n7\\n12 13 14 15 14 13 12\\n\\nOutput\\nDOWN\\n\\nInput\\n1\\n8\\n\\nOutput\\n-1\\n\\n\\n\\n-----Note-----\\n\\nIn the first sample, the size of the moon on the next day will be equal to 8, thus the answer is \\\"UP\\\".\\n\\nIn the second sample, the size of the moon on the next day will be 11, thus the answer is \\\"DOWN\\\".\\n\\nIn the third sample, there is no way to determine whether the size of the moon on the next day will be 7 or 9, thus the answer is -1.\",\n  \"Ground Truth Solution\": \"n = int(input())\\ns = list(map(int, input().split()))[:n]\\nk = -1\\nif s[n - 1] == 0:\\n\\tprint('UP')\\nelif s[n - 1] == 15 or s[n - 2] > s[n - 1]:\\n\\tprint('DOWN')\\nelif n == 1:\\n\\tprint(k)\\nelse:\\n\\tprint('UP')\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Moon Cycle: Understand that the moon cycle is 0 to 15 and then back to 0, with a length of 30 days, implying symmetry around 15.\\n- Edge Case Recognition: Identify special cases such as when the last observed value is 0 or 15, which determine the direction of the moon's size on the next day.\\n- Handling Single-Day Input: Consider the condition when only one day's data is available, which makes it impossible to predict the next day's trend, returning -1.\\n- Determining Trend Direction: Based on the last value and previous value, determine if the trend is increasing or decreasing. Compare the last two values when more than one day's data is provided.\",\n  \"LLM Questions\": [\n    \"How does the moon cycle affect the prediction of the moon's size on the next day?\",\n    \"What specific conditions need to be checked to determine if the moon's size will increase or decrease?\",\n    \"What should the program output if there is not enough information to determine the trend?\",\n    \"How does the code handle the edge cases where the last value is either 0 or 15?\",\n    \"In what scenario will the program output -1, and what does that indicate?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The moon cycle dictates that the size increases from 0 to 15 and then decreases back to 0. So, if the moon's size is currently increasing, it will continue to increase unless it's at the maximum (15), and if it's decreasing, it will continue to decrease unless it's at the minimum (0).\",\n    \"The specific conditions that need to be checked are: whether the last value is 0, whether the last value is 15, whether the last value is greater than the second to last value, or if there is only one day's data.\",\n    \"If there is not enough information to determine the trend, the program should output -1.\",\n    \"If the last value is 0, the next value must be larger because it begins to increase. So, it prints 'UP'. If the last value is 15, it starts decreasing, thus it prints 'DOWN'.\",\n    \"The program outputs -1 if there is only one day of data provided, as there's no previous value to compare against, making it impossible to determine the trend.\"\n  ]\n}\n```"