"```json\n{\n  \"Coding Problem\": \"You are given $4n$ sticks, the length of the $i$-th stick is $a_i$.\\n\\nYou have to create $n$ rectangles, each rectangle will consist of exactly $4$ sticks from the given set. The rectangle consists of four sides, opposite sides should have equal length and all angles in it should be right. Note that each stick can be used in only one rectangle. Each stick should be used as a side, you cannot break the stick or use it not to the full length.\\n\\nYou want to all rectangles to have equal area. The area of the rectangle with sides $a$ and $b$ is $a \\\\cdot b$.\\n\\nYour task is to say if it is possible to create exactly $n$ rectangles of equal area or not.\\n\\nYou have to answer $q$ independent queries.\\n\\n\\n-----Input-----\\n\\nThe first line of the input contains one integer $q$ ($1 \\\\le q \\\\le 500$) \u2014 the number of queries. Then $q$ queries follow.\\n\\nThe first line of the query contains one integer $n$ ($1 \\\\le n \\\\le 100$) \u2014 the number of rectangles.\\n\\nThe second line of the query contains $4n$ integers $a_1, a_2, \\\\dots, a_{4n}$ ($1 \\\\le a_i \\\\le 10^4$), where $a_i$ is the length of the $i$-th stick.\\n\\n\\n-----Output-----\\n\\nFor each query print the answer to it. If it is impossible to create exactly $n$ rectangles of equal area using given sticks, print \\\"NO\\\". Otherwise print \\\"YES\\\".\\n\\n\\n-----Example-----\\nInput\\n5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n\\nOutput\\nYES\\nYES\\nNO\\nYES\\nYES\",\n  \"Ground Truth Solution\": \"q = int(input())\\nfor i in range(0, q):\\n\\tn = int(input())\\n\\tp = [int(x) for x in input().split()]\\n\\tif n == 1 and p[0] == p[1] and (p[2] == p[3]):\\n\\t\\tprint('YES')\\n\\telse:\\n\\t\\tp = sorted(p)\\n\\t\\ts = p[0] * p[4 * n - 1]\\n\\t\\te = 0\\n\\t\\tfor j in range(0, n):\\n\\t\\t\\tif p[2 * j] == p[2 * j + 1] and p[4 * n - 2 * j - 2] == p[4 * n - 2 * j - 1] and (p[2 * j] * p[4 * n - 2 * j - 1] == s):\\n\\t\\t\\t\\te += 1\\n\\t\\tif e == n:\\n\\t\\t\\tprint('YES')\\n\\t\\telse:\\n\\t\\t\\tprint('NO')\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding Problem Requirements: The problem requires checking if $4n$ sticks can form $n$ rectangles with equal areas. Each rectangle must be formed by 4 sticks, with opposite sides having equal lengths, and all rectangles should have the same area. Each stick can only be used in one rectangle.\\n- Identifying Constraints: Note that the sticks must be used in their entirety. Consider that all rectangles must have the same area. Realize that opposite sides of a rectangle must have equal length.\\n- Choosing an Algorithmic Strategy: Sort the input array of stick lengths. Check if the sticks can be paired into rectangles such that each rectangle has the same area. The area of each potential rectangle is defined by the product of its sides, which can be determined by $a[i]*a[4n-1-i]$.\\n- Implementation Details: Make sure to verify that adjacent pairs are equal, meaning each stick is used as opposite sides of some rectangle, and that all areas are the same.\",\n  \"LLM Questions\": [\n    \"What are the key requirements for forming valid rectangles from the given sticks?\",\n    \"How do you ensure that all rectangles have the same area?\",\n    \"What data structure or initial processing might simplify the problem?\",\n    \"How would you handle the constraint that each stick can only be used in one rectangle?\",\n    \"How can you efficiently verify that it's possible to create $n$ rectangles of equal area with given sticks?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Each rectangle must be formed by 4 sticks, with opposite sides having equal lengths. The sticks must be used in their entirety, and each stick can be used only once.\",\n    \"All rectangles must have the same area, which is calculated by multiplying the lengths of the adjacent sides (e.g., length * width).\",\n    \"Sorting the input array of stick lengths can help pair up sticks that might form valid rectangle sides more easily.\",\n    \"By pairing sticks to form rectangle sides and keeping track of used sticks, you ensure that each stick is only used once.\",\n    \"After sorting the sticks, you can iterate through them, checking if adjacent pairs are equal (indicating opposite sides) and if the product of their lengths results in the same area for all rectangles.\"\n  ]\n}\n```"