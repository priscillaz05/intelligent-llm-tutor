"```json\n{\n  \"Coding Problem\": \"There is a prison that can be represented as a rectangular matrix with $n$ rows and $m$ columns. Therefore, there are $n \\cdot m$ prison cells. There are also $n \\cdot m$ prisoners, one in each prison cell. Let's denote the cell in the $i$-th row and the $j$-th column as $(i, j)$.\\n\\nThere's a secret tunnel in the cell $(r, c)$, that the prisoners will use to escape! However, to avoid the risk of getting caught, they will escape at night.\\n\\nBefore the night, every prisoner is in his own cell. When night comes, they can start moving to adjacent cells. Formally, in one second, a prisoner located in cell $(i, j)$ can move to cells $( i - 1 , j )$ , $( i + 1 , j )$ , $( i , j - 1 )$ , or $( i , j + 1 )$, as long as the target cell is inside the prison. They can also choose to stay in cell $(i, j)$.\\n\\nThe prisoners want to know the minimum number of seconds needed so that every prisoner can arrive to cell $( r , c )$ if they move optimally. Note that there can be any number of prisoners in the same cell at the same time.\\n\\n\\n-----Input-----\\n\\nThe first line contains an integer $t$ $(1 \\le t \\le 10^4)$, the number of test cases.\\n\\nEach of the next $t$ lines contains four space-separated integers $n$, $m$, $r$, $c$ ($1 \\le r \\le n \\le 10^9$, $1 \\le c \\le m \\le 10^9$).\\n\\n\\n-----Output-----\\n\\nPrint $t$ lines, the answers for each test case.\\n\\n\\n-----Examples-----\\n\\nInput\\n3\\n10 10 1 1\\n3 5 2 4\\n10 2 5 1\\nOutput\\n18\\n4\\n6\\n\\n\\n-----Note-----\\n\\nNone\",\n  \"Ground Truth Solution\": \"for _ in [*open(0)][1:]:\\n\\t(n, m, r, c) = map(int, _.split())\\n\\tprint(max(r + c - 2, n + m - r - c, m + r - c - 1, n + c - r - 1))\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: Recognize that the task is to find the maximum Manhattan distance from any cell in the prison to the escape tunnel cell (r, c).\\n- Formulating a Solution: Realize that the worst-case scenario will be one of the corners of the prison. Calculate the Manhattan distances from the tunnel cell (r, c) to all four corners: (1, 1), (1, m), (n, 1), and (n, m). Take the maximum of these distances.\\n- Implementing the Solution: Directly implement the formula by calculating the four Manhattan distances and selecting the maximum among them.\",\n  \"LLM Questions\": [\n    \"What is the maximum possible Manhattan distance a prisoner could be from the escape tunnel?\",\n    \"How can you compute the Manhattan distance between two cells?\",\n    \"How would the corners of the prison impact the worst-case time?\",\n    \"How do you handle multiple test cases from standard input?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The maximum possible Manhattan distance is the longest time it would take any prisoner to reach the tunnel.\",\n    \"The Manhattan distance between cells (i, j) and (r, c) is |i - r| + |j - c|.\",\n    \"The corners will represent the furthest points so you compare the distances from each corner to (r,c)\",\n    \"Read the number of test cases from the input and then process each test case separately within a loop.  Also, be sure to read the inputs correctly for each test case.\"\n  ]\n}\n```"