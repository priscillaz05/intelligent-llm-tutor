"```json\n{\n  \"Coding Problem\": \"Chef is playing with weights. He has an object weighing W units. He also has three weights each of X, Y, and Z units respectively. Help him determine whether he can measure the exact weight of the object with one or more of these weights.\\n\\nIf it is possible to measure the weight of object with one or more of these weights, print YES, otherwise print NO. \\n\\n------ Input Format ------ \\n\\n- The first line of input will contain a single integer T, denoting the number of test cases.\\n- Each test case consists of single line containing a four positive integers W, X, Y, and Z.\\n\\n------ Output Format ------ \\n\\nFor each test case, output on a new line YES if it is possible to measure the weight of object with one or more of these weights, otherwise print NO.\\n\\nYou may print each character of the string in either uppercase or lowercase (for example, the strings yes, YES, Yes, and yeS will all be treated as identical).\\n\\n------ Constraints ------ \\n\\n$1 \u2264 T \u2264 10^{4}$\\n$1 \u2264 W, X, Y, Z \u2264 10^{5}$\\n\\n----- Sample Input 1 ------ \\n4\\n5 2 1 6\\n7 9 7 2\\n20 8 10 12\\n20 10 11 12\\n\\n----- Sample Output 1 ------ \\nNO\\nYES\\nYES\\nNO\\n\\n----- explanation 1 ------ \\nTest Case $1$: It is not possible to measure $5$ units using any combination of given weights.\\n\\nTest Case $2$: Chef can use the second weight of $7$ units to measure the object exactly.\\n\\nTest Case $3$: Chef can use combination of first and third weights to measure $8+12=20$ units.\\n\\nTest Case $4$: Chef cannot measure $20$ units of weight using any combination of given weights.\",\n  \"Ground Truth Solution\": \"for _ in range(int(input())):\\n\\t(w, x, y, z) = map(int, input().split())\\n\\tif w == x or w == y or w == z:\\n\\t\\tprint('YES')\\n\\telif x + y + z == w or x + y == w or y + z == w or (x + z == w):\\n\\t\\tprint('YES')\\n\\telse:\\n\\t\\tprint('NO')\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem Requirements: Read the problem statement carefully, identifying that the task is to determine if a weight W can be measured using any combination of three given weights X, Y, and Z.\\n- Identifying Possible Combinations: Recognize that the target weight W can be equal to any one of X, Y, or Z individually, or the sum of any two of these weights, or the sum of all three weights.\\n- Selecting an Algorithmic Strategy: Consider checking all possible combinations of X, Y, and Z against W to see if any match. This involves checking X, Y, Z individually, then X+Y, Y+Z, X+Z, and finally X+Y+Z.\\n- Implementing Combination Checks: Realize the need to check if W is equal to each individual weight, then each possible sum of two weights, and finally the sum of all three weights. If any of these conditions are true, the output is 'YES'. Otherwise, the output is 'NO'.\",\n  \"LLM Questions\": [\n    \"What are all the possible combinations of weights that could sum up to W?\",\n    \"How should the code handle multiple test cases in the input?\",\n    \"What should the code output if none of the weight combinations equal W?\",\n    \"Should the output be case-sensitive? How should this be handled?\",\n    \"How should the input line containing the weights be processed?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The possible combinations are: X, Y, Z, X+Y, Y+Z, X+Z, and X+Y+Z.\",\n    \"The code should iterate through each test case provided in the input.\",\n    \"If none of the weight combinations equal W, the code should output 'NO'.\",\n    \"No, the output should not be case-sensitive; it should be either 'YES' or 'NO' (or any case variation of these).\",\n    \"The input line containing the weights should be split into four integer values: W, X, Y, and Z. These can be achieved using `map(int, input().split())`.\"\n  ]\n}\n```"