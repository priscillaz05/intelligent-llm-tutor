"```json\n{\n  \"Coding Problem\": \"# Task\\n The number is considered to be `unlucky` if it does not have digits `4` and `7` and is divisible by `13`. Please count all unlucky numbers not greater than `n`.\\n\\n# Example\\n\\n For `n = 20`, the result should be `2` (numbers `0 and 13`).\\n \\n For `n = 100`, the result should be `7` (numbers `0, 13, 26, 39, 52, 65, and 91`)\\n \\n# Input/Output\\n\\n\\n - `[input]` integer `n`\\n\\n `1 \u2264 n \u2264 10^8(10^6 in Python)`\\n\\n\\n - `[output]` an integer\",\n  \"Ground Truth Solution\": \"def unlucky_number(n):\\n\\treturn sum((not ('4' in s or '7' in s) for s in map(str, range(0, n + 1, 13))))\",\n  \"LLM CoT Steps Breakdown\": \"- Understand the problem: We need to count numbers that are divisible by 13, do not contain digits 4 or 7, and are less than or equal to n.\\n- Generate multiples of 13: Start with 0 and increment by 13 until we exceed n.\\n- Check each multiple: For each multiple of 13, check if its string representation contains the digits 4 or 7.\\n- Count valid numbers: Increment a counter for each multiple that doesn't contain 4 or 7.\\n- Return the final count.\",\n  \"LLM Questions\": [\n    \"How can we efficiently generate all the multiples of 13 that are less than or equal to n?\",\n    \"What's an efficient way to check if a number contains the digits 4 or 7?\",\n    \"How do we ensure that we only consider numbers within the given range (0 to n)?\",\n    \"What data type should be used to store and increment the counter?\",\n    \"Are there any edge cases that need to be considered (e.g., n = 0, or very small n)?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"We can use a loop that starts at 0 and increments by 13 in each iteration.  The loop should continue as long as the current multiple is less than or equal to n.\",\n    \"The simplest way is to convert the number to a string and then use the 'in' operator to check if the string contains '4' or '7'.\",\n    \"The loop condition 'multiple <= n' handles this. Also ensure that we start from 0 and step by 13. The range should be inclusive i.e., include n if applicable.\",\n    \"An integer counter is sufficient since we are counting the number of unlucky numbers.\",\n    \"If n is less than 13, the function should return 0 if 0 contains 4 or 7, and return 1 if 0 does not contain 4 or 7.\"\n  ]\n}\n```"