"```json\n{\n  \"Coding Problem\": \"One day the Codeforces round author sat exams. He had n exams and he needed to get an integer from 2 to 5 for each exam. He will have to re-sit each failed exam, i.e. the exam that gets mark 2. \\n\\nThe author would need to spend too much time and effort to make the sum of his marks strictly more than k. That could have spoilt the Codeforces round. On the other hand, if the sum of his marks is strictly less than k, the author's mum won't be pleased at all. \\n\\nThe Codeforces authors are very smart and they always get the mark they choose themselves. Also, the Codeforces authors just hate re-sitting exams. \\n\\nHelp the author and find the minimum number of exams he will have to re-sit if he passes the exams in the way that makes the sum of marks for all n exams equal exactly k.\\n\\nInput\\n\\nThe single input line contains space-separated integers n and k (1 \u2264 n \u2264 50, 1 \u2264 k \u2264 250) \u2014 the number of exams and the required sum of marks.\\n\\nIt is guaranteed that there exists a way to pass n exams in the way that makes the sum of marks equal exactly k.\\n\\nOutput\\n\\nPrint the single number \u2014 the minimum number of exams that the author will get a 2 for, considering that the sum of marks for all exams must equal k.\\n\\nExamples\\n\\nInput\\n\\n4 8\\n\\n\\nOutput\\n\\n4\\n\\n\\nInput\\n\\n4 10\\n\\n\\nOutput\\n\\n2\\n\\n\\nInput\\n\\n1 3\\n\\n\\nOutput\\n\\n0\\n\\nNote\\n\\nIn the first sample the author has to get a 2 for all his exams.\\n\\nIn the second sample he should get a 3 for two exams and a 2 for two more.\\n\\nIn the third sample he should get a 3 for one exam.\",\n  \"Ground Truth Solution\": \"(n, k) = map(int, input().split())\\nq = k // n\\nr = k % n\\nif q > 2:\\n\\tprint(0)\\nelse:\\n\\tprint(n - r)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires finding the minimum number of exams the author needs to get a score of 2 such that the sum of all n exam scores equals k, where each exam score can be between 2 and 5.\\n- Identifying Key Constraints: The possible scores for each exam are 2, 3, 4, and 5. We want to minimize the number of 2s. The total sum must equal k. \\n- Formulating a Strategy: First, try to maximize the scores of all exams. If the average score (k // n) is greater than 2, it means that we don't need to have score 2 for all exams, so the number of 2s can be optimized to zero if each subject can have greater than or equal 3. If the quotient k // n is greater than 2, then number of exams with score 2 will be zero. However if k//n <= 2, we should minimize the number of re-sits. We can first assume that all exams will have a mark of floor(k/n), i.e. q, and then distribute the remainder r to the subjects to optimize and minimize 2s.\\n- Determining the Number of 2s: If the quotient `q = k // n` is greater than 2, it is possible to have no 2s. Otherwise the number of 2 marks is `n - r`.\",\n  \"LLM Questions\": [\n    \"What are the possible scores for each exam, and what is the overall goal of the problem?\",\n    \"How do you determine if it is possible to avoid getting a score of 2 in any of the exams?\",\n    \"If it's not possible to avoid getting a score of 2, how do you minimize the number of exams with a score of 2 while ensuring the sum equals k?\",\n    \"How do you use integer division and the modulo operator to determine the optimal distribution of scores?\",\n    \"What edge cases or constraints should be considered to ensure the solution's correctness?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"Each exam score can be 2, 3, 4, or 5. The goal is to find the minimum number of exams where the score is 2, such that the total sum of scores for all n exams equals k.\",\n    \"If k // n (the integer division of k by n) is greater than 2, then it's possible to have no exams with a score of 2 because each exam can have a score of at least 3.\",\n    \"If k // n is not greater than 2, we need to use as many higher scores as possible (3, 4, or 5) to minimize the number of 2s. The exact number will depend on how many exams need to have lower scores to reach the sum of k.\",\n    \"We use integer division `q = k // n` to find the base score for each exam, and then the modulo operator `r = k % n` to find the remainder. The remainder can then be distributed across the exams to reduce the number of 2s required. The number of 2 scores would be `n-r`.\",\n    \"Ensure that the scores assigned are within the range of 2 to 5 and that the total sum equals k. If the quotient is greater than 2, ensure that you set the count of 2s to zero, as it is possible to avoid 2s completely. Also, consider constraints n and k.\"\n  ]\n}\n```"