"```json\n{\n  \"Coding Problem\": \"Zane the wizard had never loved anyone before, until he fell in love with a girl, whose name remains unknown to us.\\n\\n [Image] \\n\\nThe girl lives in house m of a village. There are n houses in that village, lining in a straight line from left to right: house 1, house 2, ..., house n. The village is also well-structured: house i and house i + 1 (1 \u2264 i < n) are exactly 10 meters away. In this village, some houses are occupied, and some are not. Indeed, unoccupied houses can be purchased.\\n\\nYou will be given n integers a_1, a_2, ..., a_{n} that denote the availability and the prices of the houses. If house i is occupied, and therefore cannot be bought, then a_{i} equals 0. Otherwise, house i can be bought, and a_{i} represents the money required to buy it, in dollars.\\n\\nAs Zane has only k dollars to spare, it becomes a challenge for him to choose the house to purchase, so that he could live as near as possible to his crush. Help Zane determine the minimum distance from his crush's house to some house he can afford, to help him succeed in his love.\\n\\n\\n-----Input-----\\n\\nThe first line contains three integers n, m, and k (2 \u2264 n \u2264 100, 1 \u2264 m \u2264 n, 1 \u2264 k \u2264 100)\\u00a0\u2014 the number of houses in the village, the house where the girl lives, and the amount of money Zane has (in dollars), respectively.\\n\\nThe second line contains n integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 100)\\u00a0\u2014 denoting the availability and the prices of the houses.\\n\\nIt is guaranteed that a_{m} = 0 and that it is possible to purchase some house with no more than k dollars.\\n\\n\\n-----Output-----\\n\\nPrint one integer\\u00a0\u2014 the minimum distance, in meters, from the house where the girl Zane likes lives to the house Zane can buy.\\n\\n\\n-----Examples-----\\nInput\\n5 1 20\\n0 27 32 21 19\\n\\nOutput\\n40\\nInput\\n7 3 50\\n62 0 0 0 99 33 22\\n\\nOutput\\n30\\nInput\\n10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n\\nOutput\\n20\\n\\n\\n-----Note-----\\n\\nIn the first sample, with k = 20 dollars, Zane can buy only house 5. The distance from house m = 1 to house 5 is 10 + 10 + 10 + 10 = 40 meters.\\n\\nIn the second sample, Zane can buy houses 6 and 7. It is better to buy house 6 than house 7, since house m = 3 and house 6 are only 30 meters away, while house m = 3 and house 7 are 40 meters away.\",\n  \"Ground Truth Solution\": \"(n, m, k) = map(int, input().split())\\n(*a,) = map(int, input().split())\\nprint(min((abs(m - i) * 10 for (i, v) in enumerate(a, 1) if 0 < v <= k)))\",\n  \"LLM CoT Steps Breakdown\": \"- Reading Input: Read the number of houses (n), the girl's house (m), and Zane's budget (k) from the first line. Read the prices of each house (a_i) from the second line.\\n- Filtering Affordable Houses: Create a list of houses that Zane can afford by checking if their prices (a_i) are greater than 0 (available) and less than or equal to his budget (k).\\n- Calculating Distances: Calculate the distance between the girl's house (m) and each affordable house (i) by taking the absolute difference and multiplying by 10 (since each house is 10 meters apart).\\n- Finding the Minimum Distance: Find the minimum distance among all affordable houses.\\n- Print Output: Print the calculated minimum distance.\",\n  \"LLM Questions\": [\n    \"How can I efficiently determine which houses Zane can afford given his budget k?\",\n    \"How can I calculate the distance between two houses, given that each house is 10 meters apart?\",\n    \"How do I handle the case where there are multiple affordable houses and I need to find the minimum distance?\",\n    \"What data structure is best suited for storing the prices of the houses and their corresponding indices?\",\n    \"How can I effectively read and parse the input from the provided format?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"You can iterate through the prices of the houses (a_i) and check if each price is greater than 0 (available) and less than or equal to the budget (k). If both conditions are met, the house is affordable.\",\n    \"The distance between two houses i and m is simply the absolute difference between their house numbers multiplied by 10: abs(m - i) * 10.\",\n    \"After calculating the distance to each affordable house, you can use the min() function to find the minimum distance among all calculated distances.\",\n    \"A list is suitable for storing the prices, and you can use the enumerate() function to get both the index and the value of each house price. This allows you to associate the price with its house number.\",\n    \"You can use the map() function with int() and the split() method to read the integers from each line of input. For the first line, use map(int, input().split()) to read n, m, and k. For the second line, use map(int, input().split()) and convert it into a list or tuple to store the house prices.\"\n  ]\n}\n```"