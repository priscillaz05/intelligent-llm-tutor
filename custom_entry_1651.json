"```json\n{\n  \"Coding Problem\": \"Tax Rate Changed\\n\\nVAT (value-added tax) is a tax imposed at a certain rate proportional to the sale price.\\n\\nOur store uses the following rules to calculate the after-tax prices.\\n\\n* When the VAT rate is x%, for an item with the before-tax price of p yen, its after-tax price of the item is p (100+x) / 100 yen, fractions rounded off.\\n* The total after-tax price of multiple items paid at once is the sum of after-tax prices of the items.\\n\\n\\n\\nThe VAT rate is changed quite often. Our accountant has become aware that \\\"different pairs of items that had the same total after-tax price may have different total after-tax prices after VAT rate changes.\\\" For example, when the VAT rate rises from 5% to 8%, a pair of items that had the total after-tax prices of 105 yen before can now have after-tax prices either of 107, 108, or 109 yen, as shown in the table below.\\n\\nBefore-tax prices of two items| After-tax price with 5% VAT| After-tax price with 8% VAT\\n---|---|---\\n20, 80| 21 + 84 = 105| 21 + 86 = 107\\n2, 99| 2 + 103 = 105| 2 + 106 = 108\\n13, 88| 13 + 92 = 105| 14 + 95 = 109\\n\\n\\n\\nOur accountant is examining effects of VAT-rate changes on after-tax prices. You are asked to write a program that calculates the possible maximum total after-tax price of two items with the new VAT rate, knowing their total after-tax price before the VAT rate change.\\n\\nInput\\n\\nThe input consists of multiple datasets. Each dataset is in one line, which consists of three integers x, y, and s separated by a space. x is the VAT rate in percent before the VAT-rate change, y is the VAT rate in percent after the VAT-rate change, and s is the sum of after-tax prices of two items before the VAT-rate change. For these integers, 0 < x < 100, 0 < y < 100, 10 < s < 1000, and x \u2260 y hold. For before-tax prices of items, all possibilities of 1 yen through s-1 yen should be considered.\\n\\nThe end of the input is specified by three zeros separated by a space.\\n\\nOutput\\n\\nFor each dataset, output in a line the possible maximum total after-tax price when the VAT rate is changed to y%.\\n\\nSample Input\\n\\n\\n5 8 105\\n8 5 105\\n1 2 24\\n99 98 24\\n12 13 26\\n1 22 23\\n1 13 201\\n13 16 112\\n2 24 50\\n1 82 61\\n1 84 125\\n1 99 999\\n99 1 999\\n98 99 999\\n1 99 11\\n99 1 12\\n0 0 0\\n\\n\\nOutput for the Sample Input\\n\\n\\n109\\n103\\n24\\n24\\n26\\n27\\n225\\n116\\n62\\n111\\n230\\n1972\\n508\\n1004\\n20\\n7\\n\\n\\nHints\\n\\nIn the following table, an instance of a before-tax price pair that has the maximum after-tax price after the VAT-rate change is given for each dataset of the sample input.\\n\\nDataset| Before-tax prices| After-tax price with y% VAT\\n---|---|---\\n5 8 105 |  13, 88|  14 + 95 = 109\\n8 5 105 |  12, 87|  12 + 91 = 103\\n1 2 24 |  1, 23|  1 + 23 = 24\\n99 98 24 |  1, 12|  1 + 23 = 24\\n12 13 26 |  1, 23|  1 + 25 = 26\\n1 22 23 |  1, 22|  1 + 26 = 27\\n1 13 201 |  1,199|  1 +224 = 225\\n13 16 112|  25, 75|  29 + 87 = 116\\n2 24 50 |  25, 25|  31 + 31 = 62\\n1 82 61 |  11, 50|  20 + 91 = 111\\n1 84 125 |  50, 75|  92 +138 = 230\\n1 99 999 |  92,899| 183+1789 =1972\\n99 1 999 |  1,502|  1 +507 = 508\\n98 99 999|  5,500|  9 +995 =1004\\n1 99 11 |  1, 10|  1 + 19 = 20\\n99 1 12 |  1, 6|  1 + 6 = 7\\n\\n\\n\\n\\nExample\\n\\nInput\\n\\n5 8 105\\n8 5 105\\n1 2 24\\n99 98 24\\n12 13 26\\n1 22 23\\n1 13 201\\n13 16 112\\n2 24 50\\n1 82 61\\n1 84 125\\n1 99 999\\n99 1 999\\n98 99 999\\n1 99 11\\n99 1 12\\n0 0 0\\n\\n\\nOutput\\n\\n109\\n103\\n24\\n24\\n26\\n27\\n225\\n116\\n62\\n111\\n230\\n1972\\n508\\n1004\\n20\\n7\",\n  \"Ground Truth Solution\": \"from math import floor\\nwhile True:\\n\\t(x, y, s) = map(int, input().split())\\n\\tif (x, y, s) == (0, 0, 0):\\n\\t\\tquit()\\n\\tans = 0\\n\\tfor i in range(1, s):\\n\\t\\tj = s - floor(i * (100 + x) / 100)\\n\\t\\tif j < 1:\\n\\t\\t\\tcontinue\\n\\t\\tj = floor((j + 1) * (100 / (100 + x)))\\n\\t\\tfor k in [j - 1, j]:\\n\\t\\t\\tif floor(i * (100 + x) / 100) + floor(k * (100 + x) / 100) == s:\\n\\t\\t\\t\\tans = max(ans, floor(i * (100 + y) / 100) + floor(k * (100 + y) / 100))\\n\\tprint(ans)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem describes a scenario where a store calculates after-tax prices using VAT. The VAT rate changes, and we need to find the maximum possible total after-tax price for two items after the VAT change, given their total after-tax price before the change.\\n- Identifying Constraints: We are given x (old VAT rate), y (new VAT rate), and s (total after-tax price with the old VAT rate). We need to consider all possible before-tax prices for the two items, ranging from 1 to s-1.\\n- Deriving Before-Tax Prices: For each potential before-tax price i for the first item, calculate the corresponding after-tax price. Then, derive the before-tax price of the second item based on the total after-tax price s. The equations include rounding down the after-tax prices. Convert the before-tax price calculation back to an integer, accounting for potential edge cases.\\n- Calculating New After-Tax Prices: Once potential before-tax prices i and k are found such that their after-tax sum before change equals s, calculate their new after-tax prices based on y (the new VAT rate) and sum the results.\\n- Maximizing After-Tax Price: Track the maximum total after-tax price after the change, and update as needed.\\n- Handling Input: The input consists of multiple lines, each with x, y, and s. The end of input is indicated by 0 0 0.\\n- Applying Rounding: Use floor to round down the tax calculations.\",\n  \"LLM Questions\": [\n    \"How is the after-tax price calculated given the before-tax price and the VAT rate?\",\n    \"How can we determine the possible before-tax prices of the two items given their total after-tax price and the old VAT rate?\",\n    \"How do we ensure we find the *maximum* possible total after-tax price after the VAT change?\",\n    \"What edge cases do we need to consider when deriving the before-tax prices and calculating the after-tax prices?\",\n    \"How should we handle the multiple datasets, and how do we detect the end of the input?\",\n    \"Given before tax prices of item A and B, and VAT rate X, how to verify their prices sum to S, given that after-tax prices are rounded down?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The after-tax price is calculated as floor(p * (100 + x) / 100), where p is the before-tax price and x is the VAT rate.\",\n    \"Iterate through possible before-tax prices for the first item (from 1 to s-1). Calculate the before-tax price of the second item based on the total after-tax price (s) and the VAT rate (x).\",\n    \"Calculate the total after-tax price for each valid pair of before-tax prices after the VAT change, and keep track of the maximum value encountered.\",\n    \"We need to handle cases where calculated before-tax prices are not valid (e.g., negative prices). Also, we need to correctly round down after-tax prices.\",\n    \"Read each line of input, process the data, and output the result. Stop processing when the input is '0 0 0'.\",\n    \"To verify their prices sum to S, given before tax prices A and B, we check if floor(A * (100 + X) / 100) + floor(B * (100 + X) / 100) == S\"\n  ]\n}\n```"