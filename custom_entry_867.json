"```json\n{\n  \"Coding Problem\": \"Read problems statements in Mandarin Chinese  and Russian. \\nSome chefs go for a tour lasting N days. They take packages of bread for food. Each package has K pieces of breads. On the i^{th} day, they eat A_{i} pieces of bread.\\nUnfortunately, chefs are very lazy people, and they always forget to close the package of breads, so each day the last piece of bread becomes exposed to mold (a fungus), and is no longer suitable for eating. Such a bad piece is not eaten, and is instead thrown away. \\nLet us take an example. If K = 4 and N = 3, then A = {3, 1, 2}. Chefs have packages of bread each having 4 pieces of bread, and their travel lasts 3 days. In the first day, they must eat 3 pieces of bread. So they open new package of bread and eat 3 pieces. They forget to close the package, so the 4^{th} piece becomes bad. In the next day, they want to eat one piece of bread. And in the first package we don't have any good pieces of bread left, so they open a new package of bread and eat one piece from that. On the 3^{rd} day, they want to eat 2 pieces of bread. In the second package, we have three pieces, and one of them is bad; so we have 2 good pieces. They eat 2 pieces from this package. So they must buy 2 packages of bread.\\nPlease help chefs in finding out the minimum number of packages of breads they should take with them on the tour.\\n\\n------ Input ------ \\n\\nThe first line of input contains a single integer T denoting the number of test cases.\\nThe first line of each test contains two space separated integers N and K.\\nThe next line of each test case contains N space separated integers denoting the number of pieces of bread the chefs want to eat each day.\\n\\n------ Output ------ \\n\\nFor each of the T test cases, output a single line - minimum number of packages of bread the chefs should take.\\n------ \\n------ Constraints -----\\n$1 \u2264 T \u2264 10$\\n \\nSubtask 1: 15 points\\n$1 \u2264 N \u2264 100$\\n$1 \u2264 K \u2264 100$\\n$1 \u2264 A_{i} \u2264 100$\\n \\nSubtask 2: 25 points\\n$1 \u2264 N \u2264 10^{5}$\\n$1 \u2264 K \u2264 10^{6}$\\n$1 \u2264 A_{i} \u2264 10^{6}$\\n \\nSubtask 3: 60 points\\n$1 \u2264 N \u2264 10^{5}$\\n$1 \u2264 K \u2264 10^{11}$\\n$1 \u2264 A_{i} \u2264 10^{6}$\\n \\n----- Sample Input 1 ------ \\n3\\n3 4\\n3 1 2\\n1 1\\n1\\n2 4\\n8 8\\n----- Sample Output 1 ------ \\n2\\n1\\n4\\n----- explanation 1 ------ \\n\\nTest case 1 has already been explained in the statement.\\n\\nIn test case 2, we have one day tour and packages with one piece each. In the first day, we have to eat one piece of bread, so we open a package and eat one piece. Tour ended, and our answer is 1.\\n\\nIn test case 3, we have a two days tour, and packages with 4 pieces of bread each. In the first day, we have to eat 8 pieces. We need to open two packages and eat all the pieces. In the second day, we have to eat 8 pieces again. We open two packages and eat all pieces. Tour ended. Answer is 4.\",\n  \"Ground Truth Solution\": \"import sys\\nfrom itertools import *\\nfrom pprint import pprint\\n\\ndef solve():\\n\\t(N, K) = tuple((int(x) for x in sys.stdin.readline().split()))\\n\\tAS = tuple((int(x) for x in sys.stdin.readline().split()))\\n\\tassert len(AS) == N\\n\\ttotal = 0\\n\\tleft = 0\\n\\tfor a in AS:\\n\\t\\tif left > 0:\\n\\t\\t\\tleft -= 1\\n\\t\\ttotal += a // K\\n\\t\\ta = a % K\\n\\t\\twhile left < a:\\n\\t\\t\\ta -= left\\n\\t\\t\\tleft = K\\n\\t\\t\\ttotal += 1\\n\\t\\tleft -= a\\n\\treturn total\\n\\ndef perr(*ns):\\n\\tpprint(ns, stream=sys.stderr)\\nfor _ in range(int(sys.stdin.readline())): \\n\\tprint(solve())\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The problem requires calculating the minimum number of bread packages needed for a tour, considering that one bread piece per package goes bad each day.\\n- Identifying Key Variables: Recognize N (number of days), K (bread pieces per package), and Ai (bread pieces eaten on the ith day) as the key inputs.\\n- Planning the Algorithm: Iterate through each day, calculating the number of packages needed, considering spoiled bread and remaining bread from previous days.\\n- Handling Leftover Bread: Keep track of remaining bread pieces from previous days, reducing it by one due to spoilage and using it before opening new packages.\\n- Optimizing Package Usage: Aim to minimize the number of packages by using leftover bread and opening new packages only when necessary.\",\n  \"LLM Questions\": [\n    \"How does the bread spoilage affect the calculation of the number of packages needed?\",\n    \"How can you efficiently track and utilize leftover bread from previous days to minimize package usage?\",\n    \"What is the most efficient way to calculate the number of new packages needed on a given day, taking into account both spoilage and leftover bread?\",\n    \"How should the code handle the different constraint levels for N and K?\",\n    \"What are the edge cases for this problem and how should I address them?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The spoilage reduces the number of usable bread pieces from the package each day, which necessitates opening new packages more frequently.\",\n    \"By maintaining a variable that represents the leftover bread and decrementing it by one each day due to spoilage before other calculations.\",\n    \"First subtract the spoiled bread from the leftover. Then calculate how many bread pieces are needed from new packages.  Packages opened is consumption // package size, taking into account any remainder by adding one if needed.\",\n    \"Since the constraints for N and K can reach up to 10^5 and 10^11 respectively, it is important to ensure that you choose data types that can store large numbers and use efficient algorithms to avoid time limit exceeded errors. Python handles large integers without overflow, so focus on an efficient algorithm.\",\n    \"One edge case is when K is very large and A[i] is small. We need to account for the spoiled bread. Another is ensuring that the algorithm correctly handles the remainder when dividing the daily bread consumption by the number of pieces per package.\"\n  ]\n}\n```"