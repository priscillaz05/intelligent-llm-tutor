"```json\n{\n  \"Coding Problem\": \"$n$ students attended the first meeting of the Berland SU programming course ($n$ is even). All students will be divided into two groups. Each group will be attending exactly one lesson each week during one of the five working days (Monday, Tuesday, Wednesday, Thursday and Friday), and the days chosen for the groups must be different. Furthermore, both groups should contain the same number of students.\\n\\nEach student has filled a survey in which they told which days of the week are convenient for them to attend a lesson, and which are not.\\n\\nYour task is to determine if it is possible to choose two different week days to schedule the lessons for the group (the first group will attend the lesson on the first chosen day, the second group will attend the lesson on the second chosen day), and divide the students into two groups, so the groups have equal sizes, and for each student, the chosen lesson day for their group is convenient.\\n\\n\\n-----Input-----\\n\\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of testcases.\\n\\nThen the descriptions of $t$ testcases follow.\\n\\nThe first line of each testcase contains one integer $n$ ($2 \\le n \\le 1000$) \u2014 the number of students.\\n\\nThe $i$-th of the next $n$ lines contains $5$ integers, each of them is $0$ or $1$. If the $j$-th integer is $1$, then the $i$-th student can attend the lessons on the $j$-th day of the week. If the $j$-th integer is $0$, then the $i$-th student cannot attend the lessons on the $j$-th day of the week.\\n\\nAdditional constraints on the input: for each student, at least one of the days of the week is convenient, the total number of students over all testcases doesn't exceed $10^5$.\\n\\n\\n-----Output-----\\n\\nFor each testcase print an answer. If it's possible to divide the students into two groups of equal sizes and choose different days for the groups so each student can attend the lesson in the chosen day of their group, print \\\"YES\\\" (without quotes). Otherwise, print \\\"NO\\\" (without quotes).\\n\\n\\n-----Examples-----\\n\\nInput\\n2\\n4\\n1 0 0 1 0\\n0 1 0 0 1\\n0 0 0 1 0\\n0 1 0 1 0\\n2\\n0 0 0 1 0\\n0 0 0 1 0\\nOutput\\nYES\\nNO\\n\\n\\n-----Note-----\\n\\nIn the first testcase, there is a way to meet all the constraints. For example, the first group can consist of the first and the third students, they will attend the lessons on Thursday (the fourth day); the second group can consist of the second and the fourth students, and they will attend the lessons on Tuesday (the second day).\\n\\nIn the second testcase, it is impossible to divide the students into groups so they attend the lessons on different days.\",\n  \"Ground Truth Solution\": \"from itertools import combinations\\n\\ndef solve(test_case):\\n\\tn = int(input())\\n\\tmat = []\\n\\tfor i in range(n):\\n\\t\\tmat.append([int(x) for x in input().split()])\\n\\tsets = []\\n\\tfor j in range(5):\\n\\t\\ttemp = set()\\n\\t\\tfor i in range(n):\\n\\t\\t\\tif mat[i][j] == 1:\\n\\t\\t\\t\\ttemp.add(i)\\n\\t\\tif len(temp) >= n / 2:\\n\\t\\t\\tsets.append(temp)\\n\\tif len(sets) < 2:\\n\\t\\tprint('NO')\\n\\t\\treturn\\n\\tcombs = combinations(sets, 2)\\n\\tfor comb in combs:\\n\\t\\tif len(comb[0] | comb[1]) == n:\\n\\t\\t\\tprint('YES')\\n\\t\\t\\treturn\\n\\tprint('NO')\\nt = int(input())\\nfor i in range(t):\\n\\tsolve(i + 1)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the Problem: The task is to divide $n$ students into two equal groups, each attending lessons on different days. Each student provides their availability for 5 days. The goal is to determine if two days can be chosen such that each student in a group is available on the day chosen for their group.\\n- Identifying Key Constraints: The groups must be of equal size ($n/2$). Each student must be available on the day their group attends. The two chosen days must be different.\\n- Choosing an Algorithmic Approach: Iterate through all possible pairs of days. For each pair, check if it is possible to divide the students into two groups such that the constraints are satisfied. To optimize, precompute sets of students available on each day.\\n- Optimizing for Efficiency: Precompute the sets of students available on each day. Only consider days where at least $n/2$ students are available, reducing unnecessary calculations.\\n- Handling Edge Cases and Constraints: If less than two days have at least $n/2$ students available, the answer is NO. Also, the number of students is always even, so $n/2$ will always be an integer.\",\n  \"LLM Questions\": [\n    \"What is the maximum number of students and the minimum number of students?\",\n    \"How many days are there in total and what values are used to denote availabilty?\",\n    \"Can the same student attend lessons on different days?\",\n    \"What should be returned if the conditions can be satified or cannot?\",\n    \"How should the two student groups be created?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The maximum number of students is 1000 and the minimum is 2\",\n    \"There are 5 days in total, with 1 indicating availability and 0 indicating unavailability.\",\n    \"No, each student attends the lesson on only one day.\",\n    \"Return 'YES' if conditions can be satified, 'NO' otherwise.\",\n    \"Student groups need to be created such that each group size is n/2, and each student is available on the day of their group.\"\n  ]\n}\n```"