"```json\n{\n  \"Coding Problem\": \"Chef has N empty bottles where each bottle has a capacity of X litres.  \\nThere is a water tank in Chefland having K litres of water. Chef wants to fill the empty bottles using the water in the tank.  \\n\\nAssuming that Chef does not spill any water while filling the bottles, find out the maximum number of bottles Chef can fill completely.\\n\\n------ Input Format ------ \\n\\n- First line will contain T, number of test cases. Then the test cases follow.\\n- Each test case contains of a single line of input, three integers N, X, and K.\\n\\n------ Output Format ------ \\n\\nFor each test case, output in a single line answer, the maximum number of bottles Chef can fill completely.\\n\\n------ Constraints ------ \\n\\n$1 \u2264 T \u2264 100$\\n$1 \u2264 N, X \u2264 10^{5}$\\n$0 \u2264 K \u2264 10^{5}$\\n\\n----- Sample Input 1 ------ \\n3\\n5 2 8\\n10 5 4\\n3 1 4\\n----- Sample Output 1 ------ \\n4\\n0\\n3\\n----- explanation 1 ------ \\nTest Case $1$: The amount of water in the tank is $8$ litres. The capacity of each bottle is $2$ litres. Hence, $4$ water bottles can be filled completely.\\n\\nTest Case $2$: The amount of water in the tank is $4$ litres. The capacity of each bottle is $5$ litres. Hence, no water bottle can be filled completely.\\n\\nTest Case $3$: The amount of water in the tank is $4$ litres. Chef has $3$ bottles available. He can fill all these bottles completely using $3$ litres of water.\",\n  \"Ground Truth Solution\": \"t = int(input())\\nfor i in range(t):\\n\\t(n, x, k) = map(int, input().split())\\n\\tbottle = 0\\n\\tif n * x <= k:\\n\\t\\tprint(n)\\n\\telse:\\n\\t\\tfor i in range(1, n + 1):\\n\\t\\t\\tif x * i <= k:\\n\\t\\t\\t\\tbottle = bottle + 1\\n\\t\\tprint(bottle)\",\n  \"LLM CoT Steps Breakdown\": \"- Understanding the problem: We need to find the maximum number of bottles that can be completely filled given the number of bottles, capacity of each bottle and the total amount of water.\\n- Handling Input: The input consists of T test cases. Each test case has three integers N, X, and K, representing the number of bottles, the capacity of each bottle, and the total amount of water, respectively.\\n- Calculating the number of bottles that can be filled: The maximum number of bottles that can be filled is min(N, K // X). The result of K // X gives the total number of bottles that can be filled, and N is the number of available bottles. We need to output the minimum among those.\",\n  \"LLM Questions\": [\n    \"What are the inputs to the problem, and what do they represent?\",\n    \"What is the relationship between the number of bottles, the capacity of each bottle, and the total amount of water?\",\n    \"How do you determine the maximum number of bottles that can be filled given the constraints?\",\n    \"How do you handle the test cases and the input format?\",\n    \"Can you explain your approach in terms of the given sample inputs and expected outputs?\"\n  ],\n  \"Expected Answers to LLM Questions\": [\n    \"The inputs are N, X, and K, representing the number of bottles, the capacity of each bottle, and the total amount of water, respectively.\",\n    \"The total capacity of all bottles is N * X. The number of bottles that can be filled depends on whether N*X is less than or equal to K. If it is, then all bottles can be filled. If not, then the maximum number of bottles filled is floor(K / X).\",\n    \"The maximum number of bottles that can be filled is the minimum of N and floor(K / X), where floor(K / X) represents integer division, giving how many bottles can be filled.\",\n    \"The first input is T, the number of test cases. For each test case, read N, X, and K from a single line, separated by spaces. Process each test case independently.\",\n    \"For the first sample case (5 2 8), N=5, X=2, K=8.  K // X = 8 // 2 = 4. min(5, 4) = 4. So, 4 bottles can be filled.\\nFor the second sample case (10 5 4), N=10, X=5, K=4.  K // X = 4 // 5 = 0. min(10, 0) = 0. So, 0 bottles can be filled.\\nFor the third sample case (3 1 4), N=3, X=1, K=4.  K // X = 4 // 1 = 4. min(3, 4) = 3. So, 3 bottles can be filled.\"\n  ]\n}\n```"